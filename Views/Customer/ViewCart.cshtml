@model FridgeManagementSystem.Models.Cart
@using Microsoft.EntityFrameworkCore
@inject FridgeManagementSystem.Data.FridgeDbContext Context

@{
    ViewData["Title"] = "Your Shopping Cart";

    // Check for pending orders directly in the view
    var customerId = 0;
    var pendingOrdersCount = 0;

    if (User.Identity.IsAuthenticated)
    {
        var userIdClaim = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
        if (userIdClaim != null && int.TryParse(userIdClaim.Value, out var appUserId))
        {
            var customer = await Context.Customers.FirstOrDefaultAsync(c => c.ApplicationUserId == appUserId);
            if (customer != null)
            {
                customerId = customer.CustomerID;
                pendingOrdersCount = await Context.Orders
                    .CountAsync(o => o.CustomerID == customerId && o.Status == "Pending Payment");
            }
        }
    }
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<style>
    :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #e74c3c;
        --success-color: #27ae60;
        --light-bg: #f8f9fa;
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        --border-radius: 12px;
    }

    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .cart-container {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 2rem;
        margin-top: 2rem;
        backdrop-filter: blur(10px);
    }

    .cart-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.5rem;
        border-radius: var(--border-radius) var(--border-radius) 0 0;
        margin: -2rem -2rem 2rem -2rem;
        text-align: center;
    }

    .cart-table {
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow);
    }

    .table thead {
        background: var(--primary-color);
        color: white;
    }

    .table th {
        border: none;
        padding: 1rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .table td {
        padding: 1.25rem;
        vertical-align: middle;
        border-color: #e9ecef;
    }

    .fridge-info {
        text-align: left;
    }

    .fridge-brand {
        font-weight: 700;
        color: var(--primary-color);
        font-size: 1.1rem;
    }

    .fridge-model {
        color: #6c757d;
        font-size: 0.95rem;
    }

    .price {
        font-weight: 600;
        color: var(--primary-color);
        font-size: 1.1rem;
    }

    .quantity-badge {
        background: var(--secondary-color);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .subtotal {
        font-weight: 700;
        color: var(--success-color);
        font-size: 1.1rem;
    }

    .btn-remove {
        background: linear-gradient(45deg, var(--accent-color), #c0392b);
        border: none;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        color: white;
        transition: all 0.3s ease;
        font-weight: 500;
    }

        .btn-remove:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(231, 76, 60, 0.3);
            background: linear-gradient(45deg, #c0392b, var(--accent-color));
        }

    .summary-card {
        background: var(--light-bg);
        border-radius: var(--border-radius);
        padding: 2rem;
        box-shadow: var(--shadow);
        border-left: 4px solid var(--success-color);
    }

    .total-amount {
        font-size: 2rem;
        font-weight: 800;
        color: var(--success-color);
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }

    .btn-checkout {
        background: linear-gradient(45deg, var(--success-color), #219a52);
        border: none;
        border-radius: 10px;
        padding: 0.75rem 2rem;
        font-size: 1.1rem;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
    }

        .btn-checkout:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(39, 174, 96, 0.4);
            background: linear-gradient(45deg, #219a52, var(--success-color));
        }

    .btn-secondary-custom {
        background: linear-gradient(45deg, #6c757d, #5a6268);
        border: none;
        border-radius: 8px;
        padding: 0.6rem 1.5rem;
        color: white;
        transition: all 0.3s ease;
    }

        .btn-secondary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(108, 117, 125, 0.3);
            color: white;
        }

    .empty-cart {
        text-align: center;
        padding: 3rem;
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
    }

    .empty-cart-icon {
        font-size: 4rem;
        color: #bdc3c7;
        margin-bottom: 1rem;
    }

    .btn-resume {
        background: linear-gradient(45deg, var(--secondary-color), #2980b9);
        border: none;
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        color: white;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-resume:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
            color: white;
        }

    .cart-item-row:hover {
        background-color: #f8f9fa;
        transform: scale(1.01);
        transition: all 0.2s ease;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .pending-alert {
        background: linear-gradient(45deg, #3498db, #2980b9);
        color: white;
        border: none;
        border-radius: 8px;
    }

    @@media (max-width: 768px) {
        .cart-container {
            padding: 1rem;
            margin: 1rem;
        }

        .cart-header {
            margin: -1rem -1rem 1rem -1rem;
            padding: 1rem;
        }

        .table-responsive {
            border-radius: var(--border-radius);
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn-checkout, .btn-secondary-custom, .btn-resume {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
</style>

<div class="container py-4">
    <div class="cart-container">
        <div class="cart-header">
            <h1 class="mb-0"><i class="fas fa-shopping-cart me-2"></i>Your Shopping Cart</h1>
            <p class="mb-0 mt-2 opacity-75">Review your items and proceed to checkout</p>
        </div>

        @if (Model == null || !Model.CartItems.Any())
        {
            <div class="empty-cart">
                <div class="empty-cart-icon">
                    <i class="fas fa-shopping-basket"></i>
                </div>
                <h3 class="text-muted mb-3">Your cart is empty</h3>
                <p class="text-muted mb-4">Looks like you haven't added any items to your cart yet.</p>

                @if (pendingOrdersCount > 0)
                {
                    <div class="alert pending-alert mb-4">
                        <i class="fas fa-info-circle me-2"></i>
                        You have @pendingOrdersCount pending order(s) waiting for payment.
                    </div>
                }

                <div class="action-buttons">
                    <a asp-action="Dashboard" asp-controller="Customer" class="btn btn-secondary-custom">
                        <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                    </a>

                    @if (pendingOrdersCount > 0)
                    {
                        <a asp-action="ResumeCheckout" asp-controller="Customer" class="btn btn-resume">
                            <i class="fas fa-receipt me-2"></i>Complete Pending Order (@pendingOrdersCount)
                        </a>
                    }
                    else
                    {
                        <a asp-action="ResumeCheckout" asp-controller="Customer" class="btn btn-resume">
                            <i class="fas fa-receipt me-2"></i>Check for Pending Orders
                        </a>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover cart-table">
                    <thead>
                        <tr>
                            <th class="text-start">Product</th>
                            <th>Unit Price</th>
                            <th>Quantity</th>
                            <th>Subtotal</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.CartItems)
                        {
                            <tr class="cart-item-row">
                                <td class="fridge-info">
                                    <div class="fridge-brand">@item.Fridge.Brand</div>
                                    <div class="fridge-model">@item.Fridge.Model</div>
                                </td>
                                <td class="price">R @item.Price.ToString("N2")</td>
                                <td>
                                    <span class="quantity-badge">@item.Quantity</span>
                                </td>
                                <td class="subtotal">R @((item.Price * item.Quantity).ToString("N2"))</td>
                                <td>
                                    <form asp-action="RemoveFromCart" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="cartItemId" value="@item.CartItemId" />
                                        <button type="submit" class="btn btn-remove"
                                                onclick="return confirm('Are you sure you want to remove this item from your cart?')">
                                            <i class="fas fa-trash-can me-1"></i>Remove
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="row mt-5">
                <div class="col-lg-8"></div>
                <div class="col-lg-4">
                    <div class="summary-card">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4 class="mb-0">Total Amount:</h4>
                            <span class="total-amount">R @Model.CartItems.Sum(i => i.Price * i.Quantity).ToString("N2")</span>
                        </div>
                        <p class="text-muted small mb-4">* Includes all applicable taxes and fees</p>

                        <div class="action-buttons">
                            <a asp-action="Checkout" asp-controller="Customer" class="btn btn-checkout">
                                <i class="fas fa-lock me-2"></i>Proceed to Checkout
                            </a>
                            <a asp-action="Dashboard" asp-controller="Customer" class="btn btn-secondary-custom">
                                <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="https://kit.fontawesome.com/a2d9d5c56f.js" crossorigin="anonymous"></script>
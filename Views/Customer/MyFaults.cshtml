@model IEnumerable<FridgeManagementSystem.Models.FaultReport>
@{
    Layout = "_Layout";
    ViewData["Title"] = "My Reported Faults";
}

<a asp-action="Dashboard" class="btn btn-secondary">
    <i class="fas fa-arrow-left"></i> Back to Dashboard
</a>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-list-alt"></i> My Reported Faults
                    </h4>
                </div>
                <div class="card-body">
                    <!-- Display Messages -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Report Date</th>
                                        <th>Fridge</th>
                                        <th>Fault Type</th>
                                        <th>Urgency</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var faultReport in Model)
                                    {
                                        <tr>
                                            <td>@faultReport.ReportDate.ToString("dd MMM yyyy HH:mm")</td>
                                            <td>
                                                @if (faultReport.Fridge != null)
                                                {
                                                    @faultReport.Fridge.Brand @faultReport.Fridge.Model
                                                    <small class="text-muted d-block">@faultReport.Fridge.FridgeType</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@faultReport.FaultType</span>
                                            </td>
                                            <td>
                                                @{
                                                    var urgencyBadgeClass = faultReport.UrgencyLevel.ToString() switch
                                                    {
                                                        "Low" => "bg-secondary",
                                                        "Medium" => "bg-warning",
                                                        "High" => "bg-danger",
                                                        "Critical" => "bg-dark",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @urgencyBadgeClass">@faultReport.UrgencyLevel</span>
                                            </td>
                                            <td>
                                                @{
                                                    var status = faultReport.Status.ToString();
                                                    var statusBadgeClass = status switch
                                                    {
                                                        "Pending" => "bg-warning",
                                                        "InProgress" => "bg-primary",
                                                        "Completed" => "bg-success",
                                                        "Cancelled" => "bg-secondary",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @statusBadgeClass">@status</span>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="FaultDetails" asp-route-id="@faultReport.FaultReportId"
                                                       class="btn btn-outline-primary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="FaultStatus" asp-route-id="@faultReport.FaultReportId"
                                                       class="btn btn-outline-info" title="Status & History">
                                                        <i class="fas fa-history"></i>
                                                    </a>
                                                    @if (faultReport.Status.ToString() == "Pending")
                                                    {
                                                        <form asp-action="CancelFault" method="post" class="d-inline">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="id" value="@faultReport.FaultReportId" />
                                                            <button type="submit" class="btn btn-outline-danger"
                                                                    title="Cancel Fault"
                                                                    onclick="return confirm('Are you sure you want to cancel this fault report? This action cannot be undone.')">
                                                                <i class="fas fa-times"></i>
                                                            </button>
                                                        </form>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No Faults Reported</h5>
                            <p class="text-muted">You haven't reported any faults yet.</p>
                            <a asp-action="CreateFault" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Report New Fault
                            </a>
                        </div>
                    }
                </div>
                @if (Model != null && Model.Any())
                {
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                Showing @Model.Count() fault report@(Model.Count() != 1 ? "s" : "")
                            </small>
                            <a asp-action="CreateFault" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Report New Fault
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle form submission confirmation
        document.addEventListener('DOMContentLoaded', function() {
            const cancelForms = document.querySelectorAll('form[asp-action="CancelFault"]');
            cancelForms.forEach(form => {
                form.addEventListener('submit', function(e) {
                    if (!confirm('Are you sure you want to cancel this fault report? This action cannot be undone.')) {
                        e.preventDefault();
                    }
                });
            });
        });
    </script>
}
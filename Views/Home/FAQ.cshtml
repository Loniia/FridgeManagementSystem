@model List<(string Question, string Answer)>
@{
    ViewData["Title"] = "FAQ";
    Layout = "_Layout";
}

<style>
    body {
        background: linear-gradient(135deg, #f0f4f8, #d9e2ec);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    h1, h3 {
        text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    }

    .accordion-item {
        background: rgba(255, 255, 255, 0.85);
        border-radius: 12px;
        margin-bottom: 15px;
        box-shadow: 0 6px 15px rgba(0,0,0,0.1);
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .accordion-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

    .accordion-button {
        background: linear-gradient(to right, #4facfe, #00f2fe);
        color: white;
        font-weight: 600;
        border-radius: 12px;
        margin: 5px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

        .accordion-button:focus {
            box-shadow: 0 0 0 3px rgba(0, 127, 255, 0.5);
        }

    .accordion-body {
        background: rgba(255, 255, 255, 0.95);
        padding: 20px;
        border-radius: 0 0 12px 12px;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.05);
        font-size: 1.05rem;
    }

    .btn-primary {
        background: linear-gradient(145deg, #667eea, #764ba2);
        border: none;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        }

    #aiChatBox {
        background: rgba(255,255,255,0.85);
        border-radius: 15px;
        padding: 20px;
        max-width: 500px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }

    #chatMessages {
        background: rgba(240, 248, 255, 0.9);
        border-radius: 12px;
        padding: 10px;
        height: 220px;
        overflow-y: auto;
        box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);
        margin-bottom: 10px;
    }

    #chatInput {
        border-radius: 8px;
        box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);
    }

    #chatSend {
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        background: linear-gradient(145deg, #43e97b, #38f9d7);
        border: none;
        color: white;
        font-weight: 600;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        #chatSend:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.25);
        }

    input:focus, textarea:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(0, 127, 255, 0.3);
    }
</style>

<div class="container my-5">
    <h1 class="mb-4 text-center">Frequently Asked Questions</h1>

    <!-- FAQ Accordion -->
    <div class="accordion" id="faqAccordion">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading@i">
                    <button class="accordion-button @((i > 0 ? "collapsed" : ""))" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@i" aria-expanded="@(i == 0 ? "true" : "false")" aria-controls="collapse@i">
                        @Model[i].Question
                    </button>
                </h2>
                <div id="collapse@i" class="accordion-collapse collapse @((i == 0 ? "show" : ""))" aria-labelledby="heading@i" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        @Model[i].Answer
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Message Form -->
    <div class="mt-5">
        <h3 class="mb-3">Still have questions?</h3>
        <p>Send us a message and we'll get back to you!</p>

        @if (TempData["MessageError"] != null)
        {
            <div class="alert alert-danger">@TempData["MessageError"]</div>
        }
        @if (TempData["MessageSuccess"] != null)
        {
            <div class="alert alert-success">@TempData["MessageSuccess"]</div>
        }

        <form asp-action="FAQMessage" method="post">
            <div class="mb-3">
                <label>Email</label>
                <input type="email" name="email" class="form-control" required />
            </div>
            <div class="mb-3">
                <label>Message</label>
                <textarea name="message" class="form-control" rows="4" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Send Message</button>
        </form>
    </div>

    <!-- AI Chat Box -->
    <div class="mt-5">
        <h3 class="mb-3">Need instant help?</h3>
        <div id="aiChatBox">
            <div id="chatMessages"></div>
            <input type="text" id="chatInput" class="form-control mb-2" placeholder="Ask me anything..." />
            <button id="chatSend" class="btn btn-success w-100">Send</button>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Bootstrap JS for clickable accordion -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Demo AI chat
        const chatMessages = document.getElementById("chatMessages");
        const chatInput = document.getElementById("chatInput");
        const chatSend = document.getElementById("chatSend");

        chatSend.addEventListener("click", () => {
            const msg = chatInput.value.trim();
            if (!msg) return;

            chatMessages.innerHTML += `<div><strong>You:</strong> ${msg}</div>`;
            chatInput.value = "";

            setTimeout(() => {
                chatMessages.innerHTML += `<div><strong>AI:</strong> Sorry, I'm just a demo bot. Please contact support!</div>`;
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }, 500);
        });

        // Allow Enter key to send
        chatInput.addEventListener("keypress", (e) => {
            if (e.key === "Enter") {
                e.preventDefault();
                chatSend.click();
            }
        });
    </script>
}

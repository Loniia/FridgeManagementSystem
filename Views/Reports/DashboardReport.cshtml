<!-- Views/Reports/Dashboard.cshtml -->
@model FridgeManagementSystem.Models.DashboardReport

@{
    ViewData["Title"] = "Fridge Management System - Dashboard";
}

<div class="container-fluid">
    <h1 class="display-4">Fridge Management System Dashboard</h1>

    <!-- Key Metrics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-white bg-primary">
                <div class="card-body">
                    <h5 class="card-title">Total Customers</h5>
                    <h2 class="card-text">@Model.TotalCustomers</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success">
                <div class="card-body">
                    <h5 class="card-title">Total Fridges</h5>
                    <h2 class="card-text">@Model.TotalFridges</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning">
                <div class="card-body">
                    <h5 class="card-title">Pending Faults</h5>
                    <h2 class="card-text">@Model.PendingFaults</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-info">
                <div class="card-body">
                    <h5 class="card-title">Scheduled Maintenance</h5>
                    <h2 class="card-text">@Model.ScheduledMaintenance</h2>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Fridge Status Chart -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Fridge Status Distribution</h5>
                </div>
                <div class="card-body">
                    <canvas id="fridgeStatusChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Fault Status Chart -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Fault Status Distribution</h5>
                </div>
                <div class="card-body">
                    <canvas id="faultStatusChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <!-- Quick Actions -->
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Quick Reports</h5>
                </div>
                <div class="card-body">
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("DetailedReport")" class="btn btn-outline-primary">Detailed Report</a>
                        <a href="@Url.Action("FaultReport")" class="btn btn-outline-warning">Fault Reports</a>
                        <a href="@Url.Action("MaintenanceReport")" class="btn btn-outline-info">Maintenance Reports</a>
                        <a href="@Url.Action("ExportToExcel", new { reportType = "dashboard" })" class="btn btn-outline-success">Export to Excel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Fridge Status Chart
        var fridgeStatusCtx = document.getElementById('fridgeStatusChart').getContext('2d');
        var fridgeStatusChart = new Chart(fridgeStatusCtx, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.FridgeStatusSummary.Select(f => f.Status))),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.FridgeStatusSummary.Select(f => f.Count))),
                    backgroundColor: ['#007bff', '#28a745', '#ffc107', '#dc3545', '#6c757d']
                }]
            }
        });

        // Fault Status Chart
        var faultStatusCtx = document.getElementById('faultStatusChart').getContext('2d');
        var faultStatusChart = new Chart(faultStatusCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.FaultStatusSummary.Select(f => f.Status))),
                datasets: [{
                    label: 'Number of Faults',
                    data: @Html.Raw(Json.Serialize(Model.FaultStatusSummary.Select(f => f.Count))),
                    backgroundColor: '#ffc107'
                }]
            }
        });
    </script>
}
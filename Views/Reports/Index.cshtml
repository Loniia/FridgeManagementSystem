@{
    ViewData["Title"] = "Reports Dashboard";
    Layout = "_Layout";
}

<!-- ✅ Inline AdminKit Styles -->
<style>
    :root {
        --primary: #3b7ddd;
        --secondary: #6c757d;
        --success: #1cbb8c;
        --info: #17a2b8;
        --warning: #fcb92c;
        --danger: #dc3545;
        --light: #f8f9fa;
        --dark: #343a40;
        --background: #f4f6f9;
        --card-bg: #ffffff;
        --text-color: #212529;
        --muted-text: #6c757d;
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --shadow-sm: 0 2px 6px rgba(0, 0, 0, 0.05);
        --shadow-lg: 0 6px 18px rgba(0, 0, 0, 0.08);
    }

    body {
        background-color: var(--background);
        color: var(--text-color);
        font-family: "Inter", "Segoe UI", Roboto, sans-serif;
        font-size: 0.95rem;
        line-height: 1.6;
    }

    h1, h5 {
        font-weight: 600;
    }

    .card {
        border: none;
        border-radius: var(--border-radius);
        background-color: var(--card-bg);
        box-shadow: var(--shadow-sm);
        transition: var(--transition);
    }

        .card:hover {
            box-shadow: var(--shadow-lg);
        }

    .card-header {
        background-color: transparent !important;
        border-bottom: 1px solid #e9ecef;
        font-weight: 600;
    }

    .card-title {
        color: var(--text-color);
        margin-bottom: 0;
    }

    .shadow-sm {
        box-shadow: var(--shadow-sm) !important;
    }

    .btn {
        border-radius: var(--border-radius);
        font-weight: 500;
        transition: var(--transition);
        padding: 0.45rem 1.1rem;
    }

    .btn-primary {
        background-color: var(--primary);
        border-color: var(--primary);
    }

        .btn-primary:hover {
            background-color: #2f6ad9;
            border-color: #2f6ad9;
        }

    .btn-success {
        background-color: var(--success);
        border-color: var(--success);
    }

        .btn-success:hover {
            background-color: #17a97e;
            border-color: #17a97e;
        }

    .text-muted {
        color: var(--muted-text) !important;
    }

    .feather-32 {
        width: 32px;
        height: 32px;
    }

    .container-fluid {
        padding: 2rem;
    }

    /* Table styling (for Top Customers, etc.) */
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid #e9ecef;
    }

    thead {
        background-color: #f8f9fa;
        font-weight: 600;
    }

    tr:hover {
        background-color: #f1f3f5;
    }

    /* Scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-thumb {
        background-color: #adb5bd;
        border-radius: 4px;
    }

        ::-webkit-scrollbar-thumb:hover {
            background-color: #868e96;
        }

    /* Map Styles */
    .province-area {
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .province-area:hover {
            filter: brightness(1.1);
            transform: scale(1.02);
        }

    .location-marker {
        cursor: pointer;
        transition: all 0.3s ease;
        animation: pulse 2s infinite;
    }

        .location-marker:hover {
            transform: scale(1.3);
            animation: none;
        }

    @@keyframes pulse {
        0% {
            opacity: 0.8;
        }

        50% {
            opacity: 1;
        }

        100% {
            opacity: 0.8;
        }
    }

    .map-tooltip {
        position: absolute;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 8px 12px;
        border-radius: 6px;
        font-size: 12px;
        pointer-events: none;
        z-index: 1000;
        max-width: 200px;
        display: none;
    }

    .map-legend {
        background: white;
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    #southAfricaMap {
        position: relative;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 8px;
        overflow: hidden;
    }

    #mapLoading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;
    }
</style>

<div class="container-fluid p-0">

    <!-- PAGE HEADER -->
    <div class="row mb-4 align-items-center">
        <div class="col-md-6">
            <h1 class="h3 mb-1">Fridge Management Reports</h1>
            <p class="text-muted mb-0">AdminKit-style dashboard: summary cards, charts, and insights.</p>
        </div>

        <div class="col-md-6 d-flex gap-2 justify-content-md-end">
            <input type="date" id="fromDate" class="form-control w-auto" value="@ViewBag.FromDate" />
            <input type="date" id="toDate" class="form-control w-auto" value="@ViewBag.ToDate" />
            <button id="filterBtn" class="btn btn-primary px-3">Apply</button>
            <button id="exportPdfBtn" class="btn btn-success px-3">Export All to PDF</button>
        </div>
    </div>

    <!-- SUMMARY CARDS -->
    <div class="row mb-4">
        <div class="col-sm-6 col-xl-3 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Customers</h6>
                            <h2 class="mb-0">@ViewBag.TotalCustomers</h2>
                        </div>
                        <div class="ms-3 text-primary">
                            <i data-feather="users" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Fridges</h6>
                            <h2 class="mb-0">@ViewBag.TotalFridges</h2>
                        </div>
                        <div class="ms-3 text-info">
                            <i data-feather="box" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Active Faults</h6>
                            <h2 class="mb-0">@ViewBag.ActiveFaults</h2>
                        </div>
                        <div class="ms-3 text-warning">
                            <i data-feather="alert-triangle" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Sales (Orders)</h6>
                            <h2 class="mb-0">R @String.Format("{0:N2}", ViewBag.TotalSales)</h2>
                            <small class="text-muted d-block">Purchases: R @String.Format("{0:N2}", ViewBag.TotalPurchases)</small>
                            <small class="text-muted d-block">Net Profit: R @String.Format("{0:N2}", ViewBag.NetProfit)</small>
                        </div>
                        <div class="ms-3 text-success">
                            <i data-feather="trending-up" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- REAL-TIME MAP SECTION -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0 d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Fridge Distribution Map</h5>
                    <div class="text-muted small" id="mapLastUpdated">
                        <i class="fas fa-sync-alt me-1"></i> Real-time
                    </div>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-center mb-3">
                        <div class="btn-group" role="group">
                            <button class="btn btn-outline-primary" id="toggleFridges">Fridges</button>
                            <button class="btn btn-outline-success" id="toggleCustomers">Customers</button>
                            <button class="btn btn-outline-warning" id="toggleEmployees">Employees</button>
                        </div>
                    </div>

                    <div id="southAfricaMap" style="height: 400px; position: relative;">
                        <!-- SVG Map will be rendered here -->
                        <div class="text-center py-5" id="mapLoading">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading map...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading fridge distribution map...</p>
                        </div>
                    </div>

                    <!-- Map Legend -->
                    <div class="mt-3">
                        <div class="row text-center">
                            <div class="col"><span class="badge bg-success">●</span> 1-5 Fridges</div>
                            <div class="col"><span class="badge bg-warning">●</span> 6-15 Fridges</div>
                            <div class="col"><span class="badge bg-danger">●</span> 16+ Fridges</div>
                            <div class="col"><span class="badge bg-secondary">●</span> Hotspot (Heatmap)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- CHARTS SECTION -->
    <div class="row mb-4">
        <div class="col-lg-8 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Monthly Sales (Last 12 months)</h5>
                </div>
                <div class="card-body">
                    <canvas id="salesChart" height="140"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow-sm border-0 mb-3 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Top Faults</h5>
                </div>
                <div class="card-body">
                    <canvas id="faultsChart" height="140"></canvas>
                </div>
            </div>

            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Maintenance Summary</h5>
                </div>
                <div class="card-body">
                    <canvas id="maintenanceChart" height="140"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- ADDITIONAL STATS -->
    <div class="row mb-4">
        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Top Customers</h5>
                </div>
                <div class="card-body">
                    <div id="topCustomersTable">
                        <p class="text-muted">Loading...</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Inventory by Model</h5>
                </div>
                <div class="card-body">
                    <canvas id="inventoryChart" height="140"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- DISTRIBUTION + SUPPLIER -->
    <div class="row mb-4">
        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Distribution by Province</h5>
                </div>
                <div class="card-body">
                    <div id="distributionTable">
                        <p class="text-muted">Loading...</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-3">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Supplier Performance</h5>
                </div>
                <div class="card-body">
                    <div id="supplierTable">
                        <p class="text-muted">Loading...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ✅ New Button for All Customers Spending Report -->
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-end">
            <a asp-controller="Reports" asp-action="AllCustomersSpendingReport"
               class="btn btn-info px-3">
                View All Customers Spending
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script src="~/js/reports-dashboard.js"></script>
    <script>
        feather.replace();
    </script>
    <!-- Leaflet and Heatmap -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", async function () {
            const mapContainer = document.getElementById("southAfricaMap");
            const loading = document.getElementById("mapLoading");
            loading.style.display = "block";

            // Initialize Leaflet Map (South Africa center)
            const map = L.map('southAfricaMap').setView([-28.4793, 24.6727], 7);

            // Add tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 18,
                attribution: '&copy; OpenStreetMap'
            }).addTo(map);

            // Fetch data from controller
            const response = await fetch('/Reports/LocationMapData');
            const locations = await response.json();
            loading.style.display = "none";

            // Layer groups for toggling
            const fridgeLayer = L.layerGroup().addTo(map);
            const customerLayer = L.layerGroup().addTo(map);
            const employeeLayer = L.layerGroup().addTo(map);

            const heatPoints = [];

            locations.forEach(loc => {
                // Ensure coordinates are numbers
                const lat = parseFloat(loc.Latitude);
                const lng = parseFloat(loc.Longitude);

                if (isNaN(lat) || isNaN(lng)) {
                    console.warn("Invalid coordinates for", loc.City, loc.Province);
                    return;
                }

                const popupHtml = `
                            <strong>${loc.City}, ${loc.Province}</strong><br>
                            <small>Fridges: ${loc.FridgeCount}</small><br>
                            <small>Customers: ${loc.CustomerCount}</small><br>
                            <small>Employees: ${loc.EmployeeCount}</small>
                        `;

                // --- FRIDGES MARKERS ---
                let fridgeColor = 'green';
                if (loc.FridgeCount > 15) fridgeColor = 'red';
                else if (loc.FridgeCount > 5) fridgeColor = 'orange';

                const fridgeMarker = L.circleMarker([lat, lng], {
                    radius: 8,
                    color: fridgeColor,
                    fillColor: fridgeColor,
                    fillOpacity: 0.8
                }).bindPopup(popupHtml);
                fridgeMarker.addTo(fridgeLayer);

                // --- CUSTOMERS MARKERS ---
                const customerMarker = L.circleMarker([lat, lng], {
                    radius: 6,
                    color: 'blue',
                    fillColor: 'blue',
                    fillOpacity: 0.7
                }).bindPopup(popupHtml);
                customerMarker.addTo(customerLayer);

                // --- EMPLOYEES MARKERS ---
                const employeeMarker = L.circleMarker([lat, lng], {
                    radius: 6,
                    color: 'yellow',
                    fillColor: 'yellow',
                    fillOpacity: 0.7
                }).bindPopup(popupHtml);
                employeeMarker.addTo(employeeLayer);

                // --- HEATMAP POINT ---
                const intensity = loc.FridgeCount + loc.CustomerCount + loc.EmployeeCount;
                heatPoints.push([lat, lng, Math.min(intensity / 10, 1)]);
            });

            // Heatmap Layer
            const heatLayer = L.heatLayer(heatPoints, { radius: 25, blur: 15, maxZoom: 10 }).addTo(map);

            // --- TOGGLE BUTTONS ---
            document.getElementById("toggleFridges").addEventListener("click", () => {
                if (map.hasLayer(fridgeLayer)) map.removeLayer(fridgeLayer);
                else map.addLayer(fridgeLayer);
            });

            document.getElementById("toggleCustomers").addEventListener("click", () => {
                if (map.hasLayer(customerLayer)) map.removeLayer(customerLayer);
                else map.addLayer(customerLayer);
            });

            document.getElementById("toggleEmployees").addEventListener("click", () => {
                if (map.hasLayer(employeeLayer)) map.removeLayer(employeeLayer);
                else map.addLayer(employeeLayer);
            });
        });
    </script>
}


@* @{
    ViewData["Title"] = "Reports Dashboard";
    Layout = "_Layout";
}

<!-- ✅ Inline AdminKit Styles -->
<style>
    :root {
        --primary: #3b7ddd;
        --secondary: #6c757d;
        --success: #1cbb8c;
        --info: #17a2b8;
        --warning: #fcb92c;
        --danger: #dc3545;
        --light: #f8f9fa;
        --dark: #343a40;
        --background: #f4f6f9;
        --card-bg: #ffffff;
        --text-color: #212529;
        --muted-text: #6c757d;
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --shadow-sm: 0 2px 6px rgba(0, 0, 0, 0.05);
        --shadow-lg: 0 6px 18px rgba(0, 0, 0, 0.08);
    }

    body {
        background-color: var(--background);
        color: var(--text-color);
        font-family: "Inter", "Segoe UI", Roboto, sans-serif;
        font-size: 0.95rem;
        line-height: 1.6;
    }

    h1, h5 {
        font-weight: 600;
    }

    .card {
        border: none;
        border-radius: var(--border-radius);
        background-color: var(--card-bg);
        box-shadow: var(--shadow-sm);
        transition: var(--transition);
    }

        .card:hover {
            box-shadow: var(--shadow-lg);
        }

    .card-header {
        background-color: transparent !important;
        border-bottom: 1px solid #e9ecef;
        font-weight: 600;
    }

    .card-title {
        color: var(--text-color);
        margin-bottom: 0;
    }

    .shadow-sm {
        box-shadow: var(--shadow-sm) !important;
    }

    .btn {
        border-radius: var(--border-radius);
        font-weight: 500;
        transition: var(--transition);
        padding: 0.45rem 1.1rem;
    }

    .btn-primary {
        background-color: var(--primary);
        border-color: var(--primary);
    }

        .btn-primary:hover {
            background-color: #2f6ad9;
            border-color: #2f6ad9;
        }

    .btn-success {
        background-color: var(--success);
        border-color: var(--success);
    }

        .btn-success:hover {
            background-color: #17a97e;
            border-color: #17a97e;
        }

    .text-muted {
        color: var(--muted-text) !important;
    }

    .feather-32 {
        width: 32px;
        height: 32px;
    }

    .container-fluid {
        padding: 2rem;
    }

    /* Table styling (for Top Customers, etc.) */
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid #e9ecef;
    }

    thead {
        background-color: #f8f9fa;
        font-weight: 600;
    }

    tr:hover {
        background-color: #f1f3f5;
    }

    /* Scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-thumb {
        background-color: #adb5bd;
        border-radius: 4px;
    }

        ::-webkit-scrollbar-thumb:hover {
            background-color: #868e96;
        }

    /* Map Styles */
    .province-area {
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .province-area:hover {
        filter: brightness(1.1);
        transform: scale(1.02);
    }

    .location-marker {
        cursor: pointer;
        transition: all 0.3s ease;
        animation: pulse 2s infinite;
    }

    .location-marker:hover {
        transform: scale(1.3);
        animation: none;
    }

    @@keyframes pulse {
        0% { opacity: 0.8; }
        50% { opacity: 1; }
        100% { opacity: 0.8; }
    }

    .map-tooltip {
        position: absolute;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 8px 12px;
        border-radius: 6px;
        font-size: 12px;
        pointer-events: none;
        z-index: 1000;
        max-width: 200px;
        display: none;
    }

    .map-legend {
        background: white;
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    #southAfricaMap {
        position: relative;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 8px;
        overflow: hidden;
    }

    #mapLoading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;
    }
</style>

<div class="container-fluid p-0">

    <!-- PAGE HEADER -->
    <div class="row mb-3 align-items-center">
        <div class="col-md-6">
            <h1 class="h3 mb-1">Fridge Management Reports</h1>
            <p class="text-muted mb-0">AdminKit-style dashboard: summary cards, charts, and insights.</p>
        </div>

        <div class="col-md-6 d-flex gap-2 justify-content-md-end">
            <input type="date" id="fromDate" class="form-control w-auto" value="@ViewBag.FromDate" />
            <input type="date" id="toDate" class="form-control w-auto" value="@ViewBag.ToDate" />
            <button id="filterBtn" class="btn btn-primary px-3">Apply</button>
            <button id="exportPdfBtn" class="btn btn-success px-3">Export All to PDF</button>
        </div>
    </div>

    <!-- SUMMARY CARDS -->
    <div class="row">
        <div class="col-sm-6 col-xl-3">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Customers</h6>
                            <h2 class="mb-0">@ViewBag.TotalCustomers</h2>
                        </div>
                        <div class="ms-3 text-primary">
                            <i data-feather="users" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Fridges</h6>
                            <h2 class="mb-0">@ViewBag.TotalFridges</h2>
                        </div>
                        <div class="ms-3 text-info">
                            <i data-feather="box" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Active Faults</h6>
                            <h2 class="mb-0">@ViewBag.ActiveFaults</h2>
                        </div>
                        <div class="ms-3 text-warning">
                            <i data-feather="alert-triangle" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-xl-3">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Sales (Orders)</h6>
                            <h2 class="mb-0">R @String.Format("{0:N2}", ViewBag.TotalSales)</h2>
                            <small class="text-muted d-block">Purchases: R @String.Format("{0:N2}", ViewBag.TotalPurchases)</small>
                            <small class="text-muted d-block">Net Profit: R @String.Format("{0:N2}", ViewBag.NetProfit)</small>
                        </div>
                        <div class="ms-3 text-success">
                            <i data-feather="trending-up" class="feather-32"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- REAL-TIME MAP SECTION -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0 d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Fridge Distribution Map</h5>
                    <div class="text-muted small" id="mapLastUpdated">
                        <i class="fas fa-sync-alt me-1"></i> Real-time
                    </div>
                </div>
                <div class="btn-group mb-3" role="group">
  <button class="btn btn-outline-primary" id="toggleFridges">Fridges</button>
  <button class="btn btn-outline-success" id="toggleCustomers">Customers</button>
  <button class="btn btn-outline-warning" id="toggleEmployees">Employees</button>
</div>

                <div class="card-body">
                    <div id="southAfricaMap" style="height: 400px; position: relative;">
                        <!-- SVG Map will be rendered here -->
                        <div class="text-center py-5" id="mapLoading">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading map...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading fridge distribution map...</p>
                        </div>
                    </div>
                    
                    <!-- Map Legend -->
                    <div class="mt-3">
                        <div class="row text-center">
                            <div class="col"><span class="badge bg-success">●</span> 1-5 Fridges</div>
                            <div class="col"><span class="badge bg-warning">●</span> 6-15 Fridges</div>
                            <div class="col"><span class="badge bg-danger">●</span> 16+ Fridges</div>
                            <div class="col"><span class="badge bg-secondary">●</span> Hotspot (Heatmap)</div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <!-- CHARTS SECTION -->
    <div class="row mt-4">
        <div class="col-lg-8">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Monthly Sales (Last 12 months)</h5>
                </div>
                <div class="card-body">
                    <canvas id="salesChart" height="140"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow-sm border-0 mb-3">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Top Faults</h5>
                </div>
                <div class="card-body">
                    <canvas id="faultsChart" height="140"></canvas>
                </div>
            </div>

            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Maintenance Summary</h5>
                </div>
                <div class="card-body">
                    <canvas id="maintenanceChart" height="140"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- ADDITIONAL STATS -->
    <div class="row mt-4">
        <div class="col-lg-6">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Top Customers</h5>
                </div>
                <div class="card-body">
                    <div id="topCustomersTable">
                        <p class="text-muted">Loading...</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Inventory by Model</h5>
                </div>
                <div class="card-body">
                    <canvas id="inventoryChart" height="140"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- DISTRIBUTION + SUPPLIER -->

        <div class="col-lg-6">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">Supplier Performance</h5>
                </div>
                <div class="card-body">
                    <div id="supplierTable">
                        <p class="text-muted">Loading...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ✅ New Button for All Customers Spending Report -->
    <a asp-controller="Reports" asp-action="AllCustomersSpendingReport" 
       class="btn btn-info px-3">
       View All Customers Spending
    </a>
</div>
  


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script src="~/js/reports-dashboard.js"></script>
    <script>
        feather.replace();
    </script>
    <!-- Leaflet and Heatmap -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>
    <script>
                        document.addEventListener("DOMContentLoaded", async function () {
            const mapContainer = document.getElementById("southAfricaMap");
            const loading = document.getElementById("mapLoading");
            loading.style.display = "block";

            // Initialize Leaflet Map (South Africa center)
            const map = L.map('southAfricaMap').setView([-28.4793, 24.6727], 7);

            // Add tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 18,
                attribution: '&copy; OpenStreetMap'
            }).addTo(map);

            // Fetch data from controller
            const response = await fetch('/Reports/LocationMapData');
            const locations = await response.json();
            loading.style.display = "none";

            // Layer groups for toggling
            const fridgeLayer = L.layerGroup().addTo(map);
            const customerLayer = L.layerGroup().addTo(map);
            const employeeLayer = L.layerGroup().addTo(map);

            const heatPoints = [];

            locations.forEach(loc => {
                // Ensure coordinates are numbers
                const lat = parseFloat(loc.Latitude);
                const lng = parseFloat(loc.Longitude);

                if (isNaN(lat) || isNaN(lng)) {
                    console.warn("Invalid coordinates for", loc.City, loc.Province);
                    return;
                }

                const popupHtml = `
                    <strong>${loc.City}, ${loc.Province}</strong><br>
                    <small>Fridges: ${loc.FridgeCount}</small><br>
                    <small>Customers: ${loc.CustomerCount}</small><br>
                    <small>Employees: ${loc.EmployeeCount}</small>
                `;

                // --- FRIDGES MARKERS ---
                let fridgeColor = 'green';
                if (loc.FridgeCount > 15) fridgeColor = 'red';
                else if (loc.FridgeCount > 5) fridgeColor = 'orange';

                const fridgeMarker = L.circleMarker([lat, lng], {
                    radius: 8,
                    color: fridgeColor,
                    fillColor: fridgeColor,
                    fillOpacity: 0.8
                }).bindPopup(popupHtml);
                fridgeMarker.addTo(fridgeLayer);

                // --- CUSTOMERS MARKERS ---
                const customerMarker = L.circleMarker([lat, lng], {
                    radius: 6,
                    color: 'blue',
                    fillColor: 'blue',
                    fillOpacity: 0.7
                }).bindPopup(popupHtml);
                customerMarker.addTo(customerLayer);

                // --- EMPLOYEES MARKERS ---
                const employeeMarker = L.circleMarker([lat, lng], {
                    radius: 6,
                    color: 'yellow',
                    fillColor: 'yellow',
                    fillOpacity: 0.7
                }).bindPopup(popupHtml);
                employeeMarker.addTo(employeeLayer);

                // --- HEATMAP POINT ---
                const intensity = loc.FridgeCount + loc.CustomerCount + loc.EmployeeCount;
                heatPoints.push([lat, lng, Math.min(intensity / 10, 1)]);
            });

            // Heatmap Layer
            const heatLayer = L.heatLayer(heatPoints, { radius: 25, blur: 15, maxZoom: 10 }).addTo(map);

            // --- TOGGLE BUTTONS ---
            document.getElementById("toggleFridges").addEventListener("click", () => {
                if (map.hasLayer(fridgeLayer)) map.removeLayer(fridgeLayer);
                else map.addLayer(fridgeLayer);
            });

            document.getElementById("toggleCustomers").addEventListener("click", () => {
                if (map.hasLayer(customerLayer)) map.removeLayer(customerLayer);
                else map.addLayer(customerLayer);
            });

            document.getElementById("toggleEmployees").addEventListener("click", () => {
                if (map.hasLayer(employeeLayer)) map.removeLayer(employeeLayer);
                else map.addLayer(employeeLayer);
            });
        });

    </script>

} *@
@model MonthlyDashboardViewModel

@{
    ViewData["Title"] = "Monthly Dashboard";
}

<style>
    /* ===== 3D & Aesthetic Styling ===== */
    body {
        background: linear-gradient(135deg, #f8f9fa, #eef2f3);
        font-family: 'Segoe UI', sans-serif;
    }

    .dashboard-container {
        background: #fff;
        border-radius: 20px;
        padding: 25px 30px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        transition: 0.3s;
    }

        .dashboard-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

    h2 {
        text-align: center;
        font-weight: 700;
        color: #333;
        text-shadow: 1px 1px 3px rgba(0,0,0,0.1);
        margin-bottom: 25px;
    }

    .card-glow {
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        transition: all 0.3s ease;
    }

        .card-glow:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 25px rgba(0,0,0,0.25);
        }

    .card-title {
        font-size: 1.1rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1.6rem;
        font-weight: 600;
    }

    .card .card-body {
        min-height: 90px; /* ✅ Ensures all cards are same height */
    }

    select {
        border-radius: 10px;
        border: 2px solid #ddd;
        padding: 6px 12px;
        font-weight: 500;
        background-color: #fff;
        cursor: pointer;
        transition: 0.3s;
    }

        select:hover {
            border-color: #007bff;
        }

    /* 3D Chart Container */
    #chartWrapper {
        background: linear-gradient(145deg, #ffffff, #e6e9ef);
        border-radius: 25px;
        padding: 25px;
        box-shadow: 10px 10px 20px #c5c8ce, -10px -10px 20px #ffffff;
    }
</style>

<div class="dashboard-container">
    <h2>📊 Monthly Fridge Dashboard - 2025</h2>

    <!-- Month Dropdown -->
    <div class="text-center mb-4">
        <label for="monthSelect" class="fw-bold me-2">Select Month:</label>
        <select id="monthSelect">
            @for (int m = 1; m <= 12; m++)
            {
                var monthName = new DateTime(2025, m, 1).ToString("MMMM");
                if (m == ViewBag.SelectedMonth)
                {
                    <option value="@m" selected>@monthName</option>
                }
                else
                {
                    <option value="@m">@monthName</option>
                }
            }
        </select>
    </div>

    <!-- Summary Cards -->
    <div class="row text-center mb-4" id="summaryCards">
        <div class="col-md-2 mb-3">
            <div class="card bg-primary text-white card-glow">
                <div class="card-body">
                    <div class="card-title">Total Received</div>
                    <div class="card-text" id="totalReceived">@ViewBag.TotalReceived</div>
                </div>
            </div>
        </div>

        <div class="col-md-2 mb-3">
            <div class="card bg-success text-white card-glow">
                <div class="card-body">
                    <div class="card-title">Total Allocated</div>
                    <div class="card-text" id="totalAllocated">@ViewBag.TotalAllocated</div>
                </div>
            </div>
        </div>

        <div class="col-md-2 mb-3">
            <div class="card bg-warning text-dark card-glow">
                <div class="card-body">
                    <div class="card-title">Total Returned</div>
                    <div class="card-text" id="totalReturned">@ViewBag.TotalReturned</div>
                </div>
            </div>
        </div>

        <div class="col-md-2 mb-3">
            <div class="card bg-danger text-white card-glow card-filter" data-filter="lowStock" style="cursor: pointer;">
                <div class="card-body">
                    <div class="card-title">Low Stock Months ⚠️</div>
                    <div class="card-text" id="lowStockMonths">@ViewBag.LowStockMonths</div>
                </div>
            </div>
        </div>

        <div class="col-md-2 mb-3">
            <div class="card text-white card-glow" style="background-color: #e83e8c;">
                <div class="card-body">
                    <div class="card-title">Purchases Made 💰</div>
                    <div class="card-text" id="totalPurchases">@ViewBag.TotalPurchaseRequests</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Chart -->
    <div id="chartWrapper">
        <canvas id="fridgeChart" height="110"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('fridgeChart').getContext('2d');
        var data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        const threshold = 5;

        // ===== Create Chart =====
        var fridgeChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.Months,
                datasets: [
                    {
                        label: 'Received',
                        data: data.ReceivedCounts,
                        backgroundColor: data.ReceivedColors, // ✅ Uses red/blue from controller
                        borderColor: '#003f88',
                        borderWidth: 2,
                        borderRadius: 6
                    },
                    {
                        label: 'Allocated',
                        data: data.AllocatedCounts,
                        backgroundColor: 'rgba(40, 167, 69, 0.7)',
                        borderColor: 'rgba(40, 167, 69, 1)',
                        borderWidth: 2,
                        borderRadius: 6
                    },
                    {
                        label: 'Returned',
                        data: data.ReturnedCounts,
                        backgroundColor: 'rgba(255, 206, 86, 0.7)',
                        borderColor: 'rgba(255, 206, 86, 1)',
                        borderWidth: 2,
                        borderRadius: 6
                    },
                    {
                        label: 'Purchases',
                        data: data.PurchaseCounts,
                        backgroundColor: 'rgba(232, 62, 140, 0.7)',
                        borderColor: 'rgba(232, 62, 140, 1)',
                        borderWidth: 2,
                        borderRadius: 6
                    }
                ]
            },
            options: {
                responsive: true,
                layout: {
                    padding: { bottom: 30 }
                },
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            font: { size: 13, weight: 'bold' },
                            boxWidth: 15
                        }
                    },
                    title: {
                        display: true,
                        text: 'Monthly Fridge Performance (2025)',
                        font: { size: 18, weight: 'bold' },
                        color: '#333'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                const label = context.dataset.label || '';
                                const value = context.parsed.y;
                                if (label === 'Received' && value < threshold) {
                                    return `${label}: ${value} ⚠️ Low Stock!`;
                                }
                                return `${label}: ${value}`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Units' }
                    },
                    x: {
                        title: { display: true, text: 'Month' }
                    }
                }
            }
        });

        // ===== Month selection reload =====
        $('#monthSelect').on('change', function () {
            const selectedMonth = $(this).val();
            window.location.href = '@Url.Action("MonthlyDashboard", "InventoryLiaison")' + '?month=' + selectedMonth;
        });

        // ===== Low Stock Filter =====
        let lowStockActive = false;
        $('.card-filter').on('click', function () {
            lowStockActive = !lowStockActive;
            if (lowStockActive) {
                fridgeChart.data.datasets[0].backgroundColor = fridgeChart.data.datasets[0].data.map(v =>
                    v < threshold ? "rgba(255, 99, 132, 0.8)" : "rgba(200, 200, 200, 0.3)"
                );
            } else {
                fridgeChart.data.datasets[0].backgroundColor = data.ReceivedColors;
            }
            fridgeChart.update();
        });
    </script>
}


@model IEnumerable<FridgeManagementSystem.Models.PurchaseRequestViewModel>

@{
    ViewData["Title"] = "Pending Purchase Requests";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    body {
        background: linear-gradient(145deg, #e3e3e3, #f5f5f5);
        font-family: 'Poppins', sans-serif;
    }

    .dashboard-container {
        max-width: 1100px;
        margin: 40px auto;
        padding: 25px;
        border-radius: 20px;
        background: linear-gradient(145deg, #ffffff, #d8d8d8);
        box-shadow: 10px 10px 20px #bcbcbc, -10px -10px 20px #ffffff;
    }

    h2 {
        text-align: center;
        font-weight: 700;
        color: #333;
        margin-bottom: 25px;
        text-shadow: 1px 1px 2px #aaa;
    }

    table {
        border-radius: 15px;
        overflow: hidden;
        background: #fff;
        box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.1);
    }

    thead {
        background: linear-gradient(145deg, #2b3e50, #1e2d3a);
        color: #fff;
        text-transform: uppercase;
    }

    tbody tr {
        transition: all 0.3s ease;
    }

        tbody tr:hover {
            transform: scale(1.02);
            background: #f1f3f6;
        }

    .badge {
        font-size: 0.9rem;
        padding: 6px 12px;
        border-radius: 12px;
        box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.2);
    }

    .badge-pending {
        background: linear-gradient(145deg, #f9d976, #f39c12);
        color: #fff;
    }

    .badge-approved {
        background: linear-gradient(145deg, #56ab2f, #a8e063);
        color: #fff;
    }

    .badge-rejected {
        background: linear-gradient(145deg, #e53935, #e35d5b);
        color: #fff;
    }

    .alert {
        border-radius: 12px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.15);
    }

    .btn-receive, .btn-resend {
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 0.85rem;
        transition: all 0.3s ease;
    }

    .btn-receive {
        background: linear-gradient(145deg, #28a745, #20c997);
    }

        .btn-receive:hover {
            background: linear-gradient(145deg, #218838, #1e7e34);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

    .btn-resend {
        background: linear-gradient(145deg, #007bff, #0056b3);
    }

        .btn-resend:hover {
            background: linear-gradient(145deg, #0056b3, #003f7f);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
</style>

<div class="dashboard-container">
    <h2>🧾 Pending Purchase Requests</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info">@TempData["InfoMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <table class="table table-hover align-middle text-center">
        <thead>
            <tr>
                <th>Request #</th>
                <th>Item</th>
                <th>Quantity</th>
                <th>Status</th>
                <th>Requested Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var request in Model)
                {
                    <tr>
                        <td><strong>@request.RequestNumber</strong></td>
                        <td>@request.ItemFullNames</td>
                        <td>@request.Quantity</td>
                        <td>
                            @if (request.Status == "Pending")
                            {
                                <span class="badge badge-pending">Pending</span>
                            }
                            else if (request.Status == "Approved")
                            {
                                <span class="badge badge-approved">Approved</span>
                            }
                            else if (request.Status == "Rejected")
                            {
                                <span class="badge badge-rejected">Rejected</span>
                            }
                            else if (request.Status == "Completed")
                            {
                                <span class="badge bg-success">Completed</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">@request.Status</span>
                            }
                        </td>

                        <td>
                            @(request.RequestDate.HasValue ? request.RequestDate.Value.ToString("yyyy-MM-dd") : "-")
                        </td>

                        <td>
                            @if (request.Status == "Approved")
                            {
                                <a asp-area="CustomerManagementSubSystem"
                                   asp-controller="InventoryLiaison"
                                   asp-action="Receive"
                                   asp-route-purchaseRequestId="@request.PurchaseRequestID"
                                   class="btn-receive">
                                    📥 Receive Fridge
                                </a>
                            }
                            else if (request.Status == "Completed")
                            {
                                <span class="text-muted">Received</span>
                            }
                            else if (request.Status == "Rejected")
                            {
                                <a asp-area="CustomerManagementSubSystem"
                                   asp-controller="InventoryLiaison"
                                   asp-action="ResendRequest"
                                   asp-route-purchaseRequestId="@request.PurchaseRequestID"
                                   class="btn-resend">
                                    🔄 Send Request Again
                                </a>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-muted fst-italic">No purchase requests found.</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-center mt-4">
        <a asp-action="CreatePurchaseRequest" class="btn btn-dark px-4 py-2 rounded-3 shadow">➕ New Purchase Request</a>
        <a asp-action="Index" class="btn btn-outline-secondary px-4 py-2 rounded-3 shadow ms-2">📦 View Fridge Stock</a>
    </div>
</div>

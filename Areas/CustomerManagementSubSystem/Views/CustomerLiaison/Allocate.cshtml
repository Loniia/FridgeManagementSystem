@model FridgeManagementSystem.Models.FridgeAllocation
@{
    Layout = "_Layout";
    ViewData["Title"] = "Allocate Fridge";
    var order = ViewBag.Order;
    var customer = order?.Customers;
    var availableFridges = ViewBag.Fridges as List<FridgeManagementSystem.Models.Fridge>;

    // ✅ Get next scheduled maintenance visit from ViewBag
    var nextVisit = ViewBag.NextVisit as FridgeManagementSystem.Models.MaintenanceVisit;
}

<style>
    body {
        background: linear-gradient(135deg, #e0f7fa, #fce4ec);
        font-family: 'Poppins', sans-serif;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(12px);
        border-radius: 20px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .glass-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.25);
        }

    h2 {
        font-weight: 600;
        text-align: center;
        color: #4a148c;
        text-shadow: 1px 1px 3px rgba(74, 20, 140, 0.2);
        margin-bottom: 25px;
    }

    .card-title {
        color: #6a1b9a;
        font-size: 1.2rem;
        font-weight: 500;
    }

    label {
        color: #4a148c;
        font-weight: 500;
    }

    select.form-select,
    input.form-control[type="date"] {
        border-radius: 12px;
        padding: 10px;
        border: 2px solid #ce93d8;
        box-shadow: 0 3px 6px rgba(206, 147, 216, 0.2);
        transition: all 0.2s ease;
    }

        select.form-select:focus,
        input.form-control[type="date"]:focus {
            border-color: #8e24aa;
            box-shadow: 0 0 10px rgba(142, 36, 170, 0.3);
        }

    .btn {
        border-radius: 12px;
        font-weight: 500;
        padding: 10px 18px;
        transition: all 0.2s ease-in-out;
    }

    .btn-success {
        background: linear-gradient(135deg, #8e24aa, #d81b60);
        border: none;
        color: white;
        box-shadow: 0 5px 15px rgba(216, 27, 96, 0.3);
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #ab47bc, #ec407a);
            transform: translateY(-2px);
            box-shadow: 0 7px 20px rgba(216, 27, 96, 0.4);
        }

    .btn-secondary {
        background: #bdbdbd;
        border: none;
        color: #212121;
    }

        .btn-secondary:hover {
            background: #9e9e9e;
            transform: translateY(-2px);
        }

    .alert {
        border-radius: 12px;
        font-weight: 500;
    }
</style>

<div class="container mt-5 mb-5">
    <h2>✨ Allocate Fridge ✨</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger shadow-sm">@TempData["Error"]</div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success shadow-sm">@TempData["Success"]</div>
    }

    <div class="glass-card p-4 mb-4">
        <h5 class="card-title mb-3">👩‍💼 Customer Information</h5>
        <p><strong>Customer:</strong> @customer?.FullName</p>
        <p><strong>Email:</strong> @customer?.Email</p>
        <p><strong>Phone:</strong> @customer?.PhoneNumber</p>
        <p><strong>Order ID:</strong> @order?.OrderId</p>
        <p><strong>Status:</strong> @order?.Status</p>

        <!-- Return Date -->
        <p>
            <strong>Return Date:</strong>
            @if (TempData["ReturnDate"] != null)
            {
                @TempData["ReturnDate"]
            }
            else
            {
                <span class="text-muted">Not yet returned</span>
            }
        </p>

        <!-- Next Maintenance Visit -->
        <p>
            <strong>Next Maintenance Visit:</strong>
            @if (nextVisit != null)
            {
                @($"{nextVisit.ScheduledDate:yyyy-MM-dd} at {nextVisit.ScheduledTime:hh\\:mm} with {nextVisit.Employee?.FullName}")
            }
            else
            {
                <span class="text-muted">Not scheduled yet</span>
            }
        </p>
    </div>

    <form asp-area="CustomerManagementSubSystem"
          asp-controller="CustomerLiaison"
          asp-action="Allocate"
          method="post"
          class="glass-card p-4">

        <input type="hidden" name="orderId" value="@order?.OrderId" />
        <input type="hidden" name="customerId" value="@customer?.CustomerID" />
        <input type="hidden" name="orderItemId" value="@ViewBag.OrderItemId" />

        <div class="form-group mb-4">
            <label for="fridgeId" class="form-label"><strong>Select Available Fridge:</strong></label>
            <select id="fridgeId" name="fridgeId" class="form-select" required>
                <option value="">-- Select Fridge --</option>
                @foreach (var fridge in availableFridges)
                {
                    <option value="@fridge.FridgeId">
                        @($"{fridge.Brand} - {fridge.Model} ({fridge.FridgeType})")
                    </option>
                }
            </select>
        </div>

        <div class="form-group mb-4">
            <label for="AllocationDate" class="form-label"><strong>Allocation Date:</strong></label>
            <input type="date"
                   id="AllocationDate"
                   name="AllocationDate"  <!-- matches controller -->
            class="form-control"
            value="@DateTime.Now.ToString("yyyy-MM-dd")"
            min="@DateTime.Now.AddMonths(-6).ToString("yyyy-MM-dd")"
            max="@DateTime.Now.ToString("yyyy-MM-dd")"
            required />
            <small class="text-muted">Select a date within the past 6 months.</small>
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-success me-3">💖 Allocate Fridge</button>
            <a asp-action="ProcessPendingAllocations"
               asp-area="CustomerManagementSubSystem"
               asp-controller="CustomerLiaison"
               class="btn btn-secondary">❌ Cancel</a>
        </div>
    </form>
</div>

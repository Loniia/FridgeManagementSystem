@model FridgeManagementSystem.Models.MaintenanceChecklist
@{
    ViewData["Title"] = "Maintenance Checklist";
}

<style>
    /* Main container styling */
    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Card styling */
    .card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .card-header {
        background: linear-gradient(135deg, #3498db 0%, #2c3e50 100%);
        color: white;
        padding: 20px 25px;
        font-size: 1.3rem;
        font-weight: 600;
        border-bottom: none;
    }

        .card-header i {
            margin-right: 10px;
        }

    .card-body {
        padding: 30px;
        background-color: #f8f9fa;
    }

    /* Alert styling */
    .alert {
        border-radius: 8px;
        padding: 15px 20px;
        margin-bottom: 25px;
        border: none;
        font-weight: 500;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
    }

    .alert-success {
        background-color: #e6f7ee;
        color: #28a745;
        border-left: 4px solid #28a745;
    }

    .alert-danger {
        background-color: #ffe6e6;
        color: #d9534f;
        border-left: 4px solid #d9534f;
    }

    .btn-close {
        padding: 0.75rem;
    }

    /* Form styling */
    form {
        background: white;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 3px 15px rgba(0, 0, 0, 0.05);
    }

    .form-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 15px;
        font-size: 1.1rem;
        display: block;
        padding-bottom: 8px;
        border-bottom: 2px solid #e9ecef;
        display: flex;
        align-items: center;
    }

        .form-label i {
            margin-right: 10px;
            color: #3498db;
            font-size: 1.2rem;
            width: 25px;
        }

    .mb-3 {
        margin-bottom: 2rem !important;
        padding: 15px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .form-check {
        margin-bottom: 12px;
        padding: 10px;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

        .form-check:hover {
            background-color: #f8f9fa;
        }

    .form-check-input {
        width: 18px;
        height: 18px;
        margin-right: 10px;
        border: 2px solid #ced4da;
        transition: all 0.3s ease;
    }

        .form-check-input:checked {
            background-color: #3498db;
            border-color: #3498db;
        }

        .form-check-input:focus {
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
            border-color: #3498db;
        }

    .form-check-label {
        font-weight: 500;
        color: #495057;
        cursor: pointer;
        transition: color 0.3s ease;
    }

    .form-check:hover .form-check-label {
        color: #2c3e50;
    }

    /* Checkbox styling */
    .form-check-input[type="checkbox"] {
        border-radius: 4px;
    }

    .form-check-input[type="radio"] {
        border-radius: 50%;
    }

    /* Button styling */
    .btn {
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        border: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        box-shadow: 0 3px 10px rgba(40, 167, 69, 0.3);
    }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        }

    .btn-secondary {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        box-shadow: 0 3px 10px rgba(108, 117, 125, 0.3);
        margin-left: 10px;
    }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 117, 125, 0.4);
        }

    .btn i {
        margin-right: 8px;
    }

    /* Button container */
    .button-container {
        display: flex;
        gap: 10px;
        margin-top: 2rem;
        flex-wrap: wrap;
    }

    /* Section spacing */
    .mt-3 {
        margin-top: 2rem !important;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .container {
            padding: 15px;
        }

        .card-body {
            padding: 20px;
        }

        form {
            padding: 20px;
        }

        .mb-3 {
            padding: 12px;
        }

        .button-container {
            flex-direction: column;
        }

        .btn {
            width: 100%;
            margin-left: 0 !important;
        }
    }

    @@media (max-width: 576px) {
        .card-header {
            padding: 15px 20px;
            font-size: 1.1rem;
        }

        .form-label {
            font-size: 1rem;
        }

        .form-check {
            padding: 8px;
        }
    }

    /* Animation for form elements */
    .form-check-input, .btn {
        transition: all 0.3s ease;
    }

        /* Focus states for accessibility */
        .btn:focus, .form-check-input:focus {
            outline: 2px solid #3498db;
            outline-offset: 2px;
        }

        /* Custom checkbox and radio button styling */
        .form-check-input:checked[type="checkbox"] {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
        }

        .form-check-input:checked[type="radio"] {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
        }
</style>

<div class="container mt-4">
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form asp-action="SaveChecklist" method="post">
        <input type="hidden" name="MaintenanceVisitId" value="@Model.MaintenanceVisitId" />

        <div class="card mb-3 shadow-sm">
            <div class="card-header bg-primary text-white">
                <i class="fas fa-clipboard-list me-2"></i>Maintenance Checklist
            </div>
            <div class="card-body">

                <!-- Temperature Status -->
                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-thermometer-half"></i>
                        <strong>Temperature Status</strong>
                    </label>
                    @foreach (var status in Enum.GetValues(typeof(FridgeManagementSystem.Models.TemperatureStatus)))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio"
                                   name="TemperatureStatus"
                                   value="@status"
                                   @(Model.TemperatureStatus == (FridgeManagementSystem.Models.TemperatureStatus)status ? "checked" : "") />
                            <label class="form-check-label">@status</label>
                        </div>
                    }
                </div>

                <!-- Coolant Level -->
                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-tint"></i>
                        <strong>Coolant Level</strong>
                    </label>
                    @foreach (var level in Enum.GetValues(typeof(FridgeManagementSystem.Models.CoolantLevel)))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio"
                                   name="CoolantLevel"
                                   value="@level"
                                   @(Model.CoolantLevel == (FridgeManagementSystem.Models.CoolantLevel)level ? "checked" : "") />
                            <label class="form-check-label">@level</label>
                        </div>
                    }
                </div>

                <!-- Lighting Status -->
                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-lightbulb"></i>
                        <strong>Lighting Status</strong>
                    </label>
                    @foreach (var status in Enum.GetValues(typeof(FridgeManagementSystem.Models.LightingStatus)))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio"
                                   name="LightingStatus"
                                   value="@status"
                                   @(Model.LightingStatus == (FridgeManagementSystem.Models.LightingStatus)status ? "checked" : "") />
                            <label class="form-check-label">@status</label>
                        </div>
                    }
                </div>

                <!-- Door Seal Condition -->
                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-door-closed"></i>
                        <strong>Door Seal Condition</strong>
                    </label>
                    @foreach (var condition in Enum.GetValues(typeof(FridgeManagementSystem.Models.DoorSealCondition)))
                    {
                        var cond = (FridgeManagementSystem.Models.DoorSealCondition)condition;
                        <div class="form-check">
                            <input class="form-check-input" type="radio"
                                   name="DoorSealCondition"
                                   value="@cond"
                                   @(Model.DoorSealCondition == cond ? "checked" : "") />
                            <label class="form-check-label">@cond</label>
                        </div>
                    }
                </div>
                <!-- Power Cable Condition -->
                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-plug"></i>
                        <strong>Power Cable Condition</strong>
                    </label>
                    @foreach (var condition in Enum.GetValues(typeof(FridgeManagementSystem.Models.PowerCableCondition)))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio"
                                   name="PowerCableCondition"
                                   value="@condition"
                                   @(Model.PowerCableCondition == (FridgeManagementSystem.Models.PowerCableCondition)condition ? "checked" : "") />
                            <label class="form-check-label">@condition</label>
                        </div>
                    }
                </div>

                <!-- Condenser Coils Cleaned -->
                <div class="mb-3 form-check">
                    <input type="hidden" name="CondenserCoilsCleaned" value="false" />
                    <input class="form-check-input" type="checkbox"
                           name="CondenserCoilsCleaned"
                           value="true"
                           @(Model.CondenserCoilsCleaned ? "checked" : "") />
                    <label class="form-check-label">
                        <i class="fas fa-wind"></i>
                        <strong>Condenser Coils Cleaned</strong>
                    </label>
                </div>

                <div class="button-container">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save me-2"></i> Save Checklist
                    </button>
                    <a asp-controller="Maintenance" asp-action="MaintenanceRequests" class="btn btn-secondary">
                        <i class="fas fa-times-circle me-2"></i> Cancel
                    </a>
                </div>
            </div>
        </div>
    </form>
</div>
@model FridgeManagementSystem.Models.MaintenanceVisit
@{
    ViewData["Title"] = "Components Used";
}

<style>
    /* Main container styling */
    .container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Card styling */
    .card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .card-header {
        background: linear-gradient(135deg, #3498db 0%, #2c3e50 100%);
        color: white;
        padding: 20px 25px;
        font-size: 1.3rem;
        font-weight: 600;
        border-bottom: none;
    }

        .card-header i {
            margin-right: 10px;
        }

    .card-body {
        padding: 25px;
        background-color: #f8f9fa;
    }

        .card-body p {
            margin-bottom: 12px;
            font-size: 1rem;
            color: #495057;
        }

        .card-body strong {
            color: #2c3e50;
            font-weight: 600;
        }

    /* Form styling */
    form {
        background: white;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 3px 15px rgba(0, 0, 0, 0.05);
    }

    /* Component rows styling */
    .component-row {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        border: 1px solid #e9ecef;
        transition: all 0.3s ease;
    }

        .component-row:hover {
            background: #e9ecef;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        }

    .row.g-3 {
        margin-right: -10px;
        margin-left: -10px;
    }

        .row.g-3 > [class^="col-"] {
            padding-right: 10px;
            padding-left: 10px;
        }

    /* Form controls styling */
    label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        display: block;
        font-size: 0.95rem;
    }

    .form-control, .form-select {
        border-radius: 8px;
        padding: 12px 15px;
        border: 1px solid #e1e5eb;
        font-size: 1rem;
        transition: all 0.3s ease;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.03);
    }

        .form-control:focus, .form-select:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
            outline: none;
        }

    /* Button styling */
    .btn {
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        border: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-primary {
        background: linear-gradient(135deg, #3498db 0%, #2c3e50 100%);
        box-shadow: 0 3px 10px rgba(52, 152, 219, 0.3);
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
        }

    .btn-secondary {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        box-shadow: 0 3px 10px rgba(108, 117, 125, 0.3);
        margin-right: 15px;
    }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 117, 125, 0.4);
        }

    .btn-lg {
        padding: 15px 30px;
        font-size: 1.1rem;
    }

    .btn i {
        margin-right: 8px;
    }

    /* Button container */
    .button-container {
        margin-top: 30px;
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        align-items: center;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .container {
            padding: 15px;
        }

        .card-body {
            padding: 20px;
        }

        form {
            padding: 20px;
        }

        .component-row {
            padding: 15px;
        }

        .row.g-3 > [class^="col-"] {
            margin-bottom: 15px;
        }

        .button-container {
            flex-direction: column;
            align-items: stretch;
        }

        .btn {
            width: 100%;
            margin-right: 0 !important;
            margin-bottom: 10px;
        }
    }

    @@media (max-width: 576px) {
        .card-header {
            padding: 15px 20px;
            font-size: 1.1rem;
        }

        .form-control, .form-select {
            padding: 10px 12px;
        }
    }

    /* Animation for form elements */
    .form-control, .form-select, .btn {
        transition: all 0.3s ease;
    }

        /* Focus states for accessibility */
        .btn:focus, .form-control:focus, .form-select:focus {
            outline: 2px solid #3498db;
            outline-offset: 2px;
        }

    /* Add button specific styling */
    #addRowBtn {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        border: none;
        color: white;
    }

        #addRowBtn:hover {
            background: linear-gradient(135deg, #218838 0%, #1e9e8a 100%);
        }
</style>

<div class="container mt-4">
    <div class="card mb-3 shadow-sm">
        <div class="card-header bg-primary text-white">
            <i class="fas fa-refrigerator me-2"></i> Fridge Details
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Fridge:</strong> @Model.MaintenanceRequest?.Fridge?.Brand</p>
                    <p><strong>Model:</strong> @Model.MaintenanceRequest?.Fridge?.Model</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Address:</strong> @Model.MaintenanceRequest?.Fridge?.Customer?.Location?.Address</p>
                </div>
            </div>
        </div>
    </div>

    <form asp-action="SaveComponents" method="post" id="componentsForm">
        <input type="hidden" name="visitId" value="@Model.MaintenanceVisitId" />

        <div id="componentsContainer">
            <div class="row g-3 mb-3 component-row">
                <div class="col-md-4">
                    <label>Component Name</label>
                    <input type="text" class="form-control" name="components[0].ComponentName" placeholder="e.g., Light Bulb" required />
                </div>
                <div class="col-md-4">
                    <label>Quantity</label>
                    <input type="number" class="form-control" name="components[0].Quantity" value="1" min="1" required />
                </div>
                <div class="col-md-4">
                    <label>Condition</label>
                    <select class="form-select" name="components[0].Condition" required>
                        @foreach (var cond in Enum.GetValues(typeof(FridgeManagementSystem.Models.ComponentCondition)))
                        {
                            <option value="@cond">@cond</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="button-container">
            <button type="button" class="btn btn-secondary" id="addRowBtn">
                <i class="fas fa-plus me-2"></i> Add Component
            </button>

            <button type="submit" class="btn btn-primary btn-lg">
                <i class="fas fa-save me-2"></i> Save Components
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let rowIndex = 1;
        document.getElementById("addRowBtn").addEventListener("click", function() {
            const container = document.getElementById("componentsContainer");
            const newRow = document.querySelector(".component-row").cloneNode(true);

            newRow.querySelectorAll("input, select").forEach(el => {
                const name = el.getAttribute("name");
                const newName = name.replace(/\d+/, rowIndex);
                el.setAttribute("name", newName);
                if (el.tagName === "INPUT") el.value = el.type === "number" ? 1 : "";
                else if (el.tagName === "SELECT") el.selectedIndex = 0;
            });

            container.appendChild(newRow);
            rowIndex++;
        });
    </script>
}
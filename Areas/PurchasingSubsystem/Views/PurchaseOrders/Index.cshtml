@model IEnumerable<FridgeManagementSystem.Models.PurchaseOrder>

@{
    ViewData["Title"] = "Purchase Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Pre-calculate counts in C# to avoid lambda issues in Razor
    var totalCount = Model.Count();
    var deliveredCount = Model.Count(po => po.Status == "Delivered");
    var orderedCount = Model.Count(po => po.Status == "Ordered");
    var cancelledCount = Model.Count(po => po.Status == "Cancelled");
}

<style>
    .po-card {
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        background: white;
    }

        .po-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status-ordered {
        background: #e3f2fd;
        color: #1565c0;
    }

    .status-delivered {
        background: #e8f5e8;
        color: #2e7d32;
    }

    .status-cancelled {
        background: #ffebee;
        color: #c62828;
    }

    .status-shipped {
        background: #fff3e0;
        color: #ef6c00;
    }

    .status-confirmed {
        background: #f3e5f5;
        color: #7b1fa2;
    }

    .btn-create {
        background: linear-gradient(135deg, #4361ee 0%, #3a0ca3 100%);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-create:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
            color: white;
        }

    .btn-dashboard {
        background: #4361ee;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .btn-dashboard:hover {
            background: #3a0ca3;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
            color: white;
        }
</style>

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold text-primary">
                <i class="fas fa-file-invoice-dollar me-2"></i>Purchase Orders
            </h2>
            <p class="text-muted mb-0">All purchase orders generated from approved quotations</p>
        </div>
        <div>
            <!-- Dashboard Button -->
            <a asp-area="PurchasingSubsystem" asp-controller="Purchase" asp-action="Index" class="btn-dashboard me-2">
                <i class="fas fa-tachometer-alt me-1"></i>Dashboard
            </a>
            <!-- Create Purchase Order Button -->
            <a asp-action="Create" class="btn btn-create me-2">
                <i class="fas fa-plus-circle me-1"></i>Create Purchase Order
            </a>
            <a asp-controller="Quotations" asp-action="Index" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-1"></i>Back to Quotations
            </a>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card bg-primary text-white text-center">
                <div class="card-body">
                    <i class="fas fa-file-invoice fa-2x mb-2"></i>
                    <h4>@totalCount</h4>
                    <p class="mb-0">Total POs</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-success text-white text-center">
                <div class="card-body">
                    <i class="fas fa-check-circle fa-2x mb-2"></i>
                    <h4>@deliveredCount</h4>
                    <p class="mb-0">Delivered</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-warning text-white text-center">
                <div class="card-body">
                    <i class="fas fa-clock fa-2x mb-2"></i>
                    <h4>@orderedCount</h4>
                    <p class="mb-0">Pending</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-danger text-white text-center">
                <div class="card-body">
                    <i class="fas fa-times-circle fa-2x mb-2"></i>
                    <h4>@cancelledCount</h4>
                    <p class="mb-0">Cancelled</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Purchase Orders Table -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-light">
            <h5 class="mb-0"><i class="fas fa-list me-2"></i>All Purchase Orders</h5>
        </div>
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-file-invoice fa-4x text-muted mb-3"></i>
                    <h5 class="text-muted">No Purchase Orders Yet</h5>
                    <p class="text-muted">Get started by creating your first purchase order.</p>
                    <div class="mt-3">
                        <a asp-area="PurchasingSubsystem" asp-controller="Purchase" asp-action="Index" class="btn-dashboard me-2">
                            <i class="fas fa-tachometer-alt me-1"></i>Go to Dashboard
                        </a>
                        <a asp-action="Create" class="btn btn-create">
                            <i class="fas fa-plus-circle me-1"></i>Create First Purchase Order
                        </a>
                    </div>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-primary">
                            <tr>
                                <th>PO Number</th>
                                <th>Supplier</th>
                                <th>Total Amount</th>
                                <th>Order Date</th>
                                <th>Expected Delivery</th>
                                <th>Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var po in Model.OrderByDescending(po => po.OrderDate))
                            {
                                <tr>
                                    <td>
                                        <strong class="text-primary">@po.PONumber</strong>
                                    </td>
                                    <td>@po.Supplier?.Name</td>
                                    <td>@po.TotalAmount.ToString("C")</td>
                                    <td>@po.OrderDate.ToString("dd MMM yyyy")</td>
                                    <td>
                                        @if (po.ExpectedDeliveryDate.HasValue)
                                        {
                                            @po.ExpectedDeliveryDate.Value.ToString("dd MMM yyyy")
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not set</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var statusClass = po.Status?.ToLower() switch
                                            {
                                                "ordered" => "status-ordered",
                                                "confirmed" => "status-confirmed",
                                                "shipped" => "status-shipped",
                                                "delivered" => "status-delivered",
                                                "cancelled" => "status-cancelled",
                                                _ => "status-ordered"
                                            };
                                        }
                                        <span class="status-badge @statusClass">
                                            @po.Status
                                        </span>
                                    </td>
                                    <td class="text-end">
                                        <div class="btn-group">
                                            <a asp-action="Details" asp-route-id="@po.PurchaseOrderID"
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye"></i> View
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@po.PurchaseOrderID"
                                               class="btn btn-outline-warning btn-sm">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
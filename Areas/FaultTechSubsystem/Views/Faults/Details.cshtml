@model FridgeManagementSystem.Models.FaultReport
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Fault Report Details";
    ViewData["Sidebar"] = "FaultTechSubsystem";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 text-gray-800">Fault Report Details</h1>
        </div>
        <div class="btn-group">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
            <button type="button" class="btn btn-outline-primary" onclick="window.print()">
                <i class="fas fa-print"></i> Print
            </button>
        </div>
    </div>

    <!-- Status Overview Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Status
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                <span class="badge @GetStatusBadgeClass(Model.Status.ToString())">@Model.Status</span>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tasks fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Urgency
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                <span class="badge @GetUrgencyBadgeClass(Model.UrgencyLevel)">@Model.UrgencyLevel</span>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Report Date
                            </div>
                            <div class="h6 mb-0 font-weight-bold text-gray-800">
                                @Model.ReportDate.ToString("MMM dd, yyyy HH:mm")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Repair Status
                            </div>
                            <div class="h6 mb-0 font-weight-bold text-gray-800">
                                @{
                                    var latestRepair = Model.RepairSchedules?.OrderByDescending(r => r.CreatedDate).FirstOrDefault();
                                    var repairStatus = latestRepair?.Status ?? "Not Started";
                                }
                                <span class="badge @GetRepairStatusBadgeClass(repairStatus)">@repairStatus</span>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tools fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Fault & Fridge Information -->
        <div class="col-lg-6">
            <!-- Fault Information Card -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Fault Information</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-4 font-weight-bold text-primary">Fault Type:</div>
                        <div class="col-sm-8">
                            <span class="badge bg-info">@Model.FaultType</span>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-sm-4 font-weight-bold text-primary">Description:</div>
                        <div class="col-sm-8">@Model.FaultDescription</div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-sm-4 font-weight-bold text-primary">Reported By:</div>
                        <div class="col-sm-8">
                            @if (Model.MaintenanceVisitId > 0)
                            {
                                <text>Maintenance Technician</text>
                            }
                            else
                            {
                                <text>Customer</text>
                            }
                        </div>
                    </div>
                    @if (Model.MaintenanceVisit != null)
                    {
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Maintenance Visit:</div>
                            <div class="col-sm-8">@Model.MaintenanceVisit.ScheduledDate.ToString("MMM dd, yyyy")</div>
                        </div>
                    }
                </div>
            </div>

            <!-- Fridge Information Card -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Fridge Information</h6>
                </div>
                <div class="card-body">
                    @if (Model.Fridge != null)
                    {
                        <div class="row">
                            <div class="col-sm-4 font-weight-bold text-primary">Serial Number:</div>
                            <div class="col-sm-8">@Model.Fridge.SerialNumber</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Model:</div>
                            <div class="col-sm-8">@Model.Fridge.Model</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Brand:</div>
                            <div class="col-sm-8">@Model.Fridge.Brand</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Type:</div>
                            <div class="col-sm-8">@Model.Fridge.FridgeType</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Condition:</div>
                            <div class="col-sm-8">
                                <span class="badge @GetConditionBadgeClass(Model.Fridge.Condition)">@Model.Fridge.Condition</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No fridge information available.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Right Column - Customer & Repair History -->
        <div class="col-lg-6">
            <!-- Customer Information Card -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Customer Information</h6>
                </div>
                <div class="card-body">
                    @if (Model.Fridge?.Customer != null)
                    {
                        <div class="row">
                            <div class="col-sm-4 font-weight-bold text-primary">Full Name:</div>
                            <div class="col-sm-8">@Model.Fridge.Customer.FullName</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Email:</div>
                            <div class="col-sm-8">@Model.Fridge.Customer.Email</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Phone:</div>
                            <div class="col-sm-8">@Model.Fridge.Customer.PhoneNumber</div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-4 font-weight-bold text-primary">Location:</div>
                            <div class="col-sm-8">@Model.Fridge.Customer.Location</div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No customer information available.</p>
                    }
                </div>
            </div>

            <!-- Repair History Card -->
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Repair History</h6>
                </div>
                <div class="card-body">
                    @if (Model.RepairSchedules != null && Model.RepairSchedules.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-sm">
                                <thead class="bg-light">
                                    <tr>
                                        <th>Date</th>
                                        <th>Status</th>
                                        <th>Diagnosis</th>
                                        <th>Notes</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var repair in Model.RepairSchedules.OrderByDescending(r => r.CreatedDate))
                                    {
                                        <tr>
                                            <td>@repair.CreatedDate.ToString("MM/dd HH:mm")</td>
                                            <td>
                                                <span class="badge @GetRepairStatusBadgeClass(repair.Status)">@repair.Status</span>
                                            </td>
                                            <td title="@repair.Diagnosis">
                                                @(string.IsNullOrEmpty(repair.Diagnosis) ? "N/A" : repair.Diagnosis.Length > 30 ? repair.Diagnosis.Substring(0, 30) + "..." : repair.Diagnosis)
                                            </td>
                                            <td title="@repair.RepairNotes">
                                                @(string.IsNullOrEmpty(repair.RepairNotes) ? "N/A" : repair.RepairNotes.Length > 30 ? repair.RepairNotes.Substring(0, 30) + "..." : repair.RepairNotes)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No repair history available.</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="card shadow mt-4">
        <div class="card-body text-center">
            <div class="btn-group" role="group">
                <a asp-action="Process" asp-route-id="@Model.FaultReportId" class="btn btn-primary btn-lg">
                    <i class="fas fa-cogs"></i> Process Fault
                </a>
                @if (Model.Status == FridgeManagementSystem.Models.TaskStatus.InProgress ||
                Model.RepairSchedules?.Any(r => r.Status == "Diagnosing" || r.Status == "Repairing") == true)
                {
                    <a asp-action="Repair" asp-route-id="@Model.FaultReportId" class="btn btn-warning btn-lg">
                        <i class="fas fa-tools"></i> Repair Fridge
                    </a>
                }
                <a asp-action="UpdateCondition" asp-route-id="@Model.FridgeId" class="btn btn-info btn-lg">
                    <i class="fas fa-thermometer-half"></i> Update Condition
                </a>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetUrgencyBadgeClass(UrgencyLevel urgencyLevel)
    {
        return urgencyLevel switch
        {
            UrgencyLevel.Critical or UrgencyLevel.Emergency => "bg-danger",
            UrgencyLevel.High => "bg-warning",
            UrgencyLevel.Medium => "bg-primary",
            UrgencyLevel.Low => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    public string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "bg-warning",
            "inprogress" => "bg-primary",
            "onhold" => "bg-info",
            "complete" => "bg-success",
            "cancelled" => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    public string GetRepairStatusBadgeClass(string repairStatus)
    {
        return repairStatus?.ToLower() switch
        {
            "diagnosing" => "bg-info",
            "awaiting parts" or "parts ordered" => "bg-warning",
            "repairing" or "in progress" => "bg-primary",
            "testing" => "bg-orange",
            "completed" => "bg-success",
            _ => "bg-secondary"
        };
    }

    public string GetConditionBadgeClass(string condition)
    {
        return condition?.ToLower() switch
        {
            "working" => "bg-success",
            "under repair" => "bg-warning",
            "faulty" => "bg-danger",
            "scrapped" => "bg-dark",
            _ => "bg-secondary"
        };
    }
}

<style>
    .bg-orange {
        background-color: #ff9800 !important;
        color: white !important;
    }

    .card {
        border: 1px solid #e3e6f0;
    }

    .card-header {
        background-color: #f8f9fc;
        border-bottom: 1px solid #e3e6f0;
    }
</style>
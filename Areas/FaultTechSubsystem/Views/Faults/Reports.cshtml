@model FridgeManagementSystem.Controllers.DashboardViewModel
@{
    ViewData["Title"] = "Fault Reports";
    var monthName = ViewBag.MonthName;
    var topBrands = ViewBag.TopBrands as dynamic;
    var commonFaults = ViewBag.CommonFaults as dynamic;
    var repairStats = ViewBag.RepairStats as dynamic;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="fas fa-chart-bar me-2"></i>Fault Reports - @monthName</h1>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-white bg-primary">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.TotalFaults</h4>
                            <p class="mb-0">Total Fault Reports</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-danger">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.HighPriorityFaults</h4>
                            <p class="mb-0">High/Critical Urgency</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-arrow-up fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.UnattendedFaults</h4>
                            <p class="mb-0">Pending Reports</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clock fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.CompletedThisWeek</h4>
                            <p class="mb-0">Resolved This Week</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Recent Fault Reports -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-list me-2"></i>Recent Fault Reports</h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentFaults.Any())
                    {
                        <div class="list-group">
                            @foreach (var faultReport in Model.RecentFaults)
                            {
                                <div class="list-group-item">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">@faultReport.Fridge?.Brand @faultReport.Fridge?.Model</h6>
                                        <span class="badge bg-@GetUrgencyBadgeClass(faultReport.UrgencyLevel)">
                                            @faultReport.UrgencyLevel
                                        </span>
                                    </div>
                                    <p class="mb-1">
                                        <span class="badge bg-info">@faultReport.FaultType</span>
                                        @faultReport.FaultDescription
                                    </p>
                                    <small class="text-muted">
                                        Customer: @faultReport.Fridge?.Customer?.FullName •
                                        Reported: @faultReport.ReportDate.ToString("MMM dd, yyyy") •
                                        Status: <span class="badge bg-secondary">@faultReport.StatusFilter</span>
                                    </small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No fault reports for this period.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Top Brands -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-tag me-2"></i>Top Brands with Faults</h5>
                </div>
                <div class="card-body">
                    @if (topBrands != null && topBrands.Count > 0)
                    {
                        <div class="list-group">
                            @foreach (var brand in topBrands)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    @brand.Brand
                                    <span class="badge bg-primary rounded-pill">@brand.Count</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No brand data available.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Faults by Type -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-exclamation-circle me-2"></i>Faults by Type</h5>
                </div>
                <div class="card-body">
                    @if (commonFaults != null && commonFaults.Count > 0)
                    {
                        <div class="list-group">
                            @foreach (var faultType in commonFaults)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <span class="badge bg-info">
                                        @faultType.FaultType
                                    </span>
                                    <span>@faultType.Count reports</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No fault type data available.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Repair Status -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-tools me-2"></i>Repair Status</h5>
                </div>
                <div class="card-body">
                    @if (repairStats != null && repairStats.Count > 0)
                    {
                        <div class="list-group">
                            @foreach (var repair in repairStats)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <span class="badge @GetRepairStatusBadgeClass(repair.Status)">
                                        @repair.Status
                                    </span>
                                    <span class="badge bg-secondary rounded-pill">@repair.Count</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No repair data available.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetUrgencyBadgeClass(UrgencyLevel urgencyLevel)
    {
        return urgencyLevel switch
        {
            UrgencyLevel.Critical => "danger",
            UrgencyLevel.Emergency => "dark",
            UrgencyLevel.High => "warning",
            UrgencyLevel.Medium => "info",
            UrgencyLevel.Low => "success",
            _ => "secondary"
        };
    }

    public string GetRepairStatusBadgeClass(string repairStatus)
    {
        return repairStatus?.ToLower() switch
        {
            "diagnosing" => "bg-info",
            "awaiting parts" => "bg-warning",
            "repairing" => "bg-danger",
            "testing" => "bg-primary",
            "completed" => "bg-success",
            _ => "bg-secondary"
        };
    }
}
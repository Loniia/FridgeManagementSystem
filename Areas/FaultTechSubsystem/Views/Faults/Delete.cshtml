@model FridgeManagementSystem.Models.FaultReport

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Delete Fault Report";
}

<div class="card shadow border-danger">
    <div class="card-header bg-danger text-white">
        <h4><i class="fas fa-trash"></i> Delete Fault Report</h4>
    </div>
    <div class="card-body">
        <h5 class="text-danger">⚠️ Are you sure you want to delete this fault report?</h5>
        <dl class="row">
            <dt class="col-sm-3">Description</dt>
            <dd class="col-sm-9">@Model.FaultDescription</dd>

            <dt class="col-sm-3">Fault Type</dt>
            <dd class="col-sm-9"><span class="badge bg-info">@Model.FaultType</span></dd>

            <dt class="col-sm-3">Fridge</dt>
            <dd class="col-sm-9">@Model.Fridge?.Model (@Model.Fridge?.Brand)</dd>

            <dt class="col-sm-3">Status</dt>
            <dd class="col-sm-9"><span class="badge @GetStatusBadgeClass(Model.StatusFilter)">@Model.StatusFilter</span></dd>

            <dt class="col-sm-3">Urgency Level</dt>
            <dd class="col-sm-9"><span class="badge @GetUrgencyBadgeClass(Model.UrgencyLevel)">@Model.UrgencyLevel</span></dd>

            <dt class="col-sm-3">Report Date</dt>
            <dd class="col-sm-9">@Model.ReportDate.ToString("yyyy-MM-dd")</dd>

            <dt class="col-sm-3">Reported By</dt>
            <dd class="col-sm-9">
                @if (Model.MaintenanceVisitId > 0)
                {
                    <text>Maintenance Technician</text>
                }
                else
                {
                    <text>Customer</text>
                }
            </dd>
        </dl>

        <!-- Warning about associated data -->
        @if (Model.RepairSchedules != null && Model.RepairSchedules.Any())
        {
            <div class="alert alert-warning">
                <h6><i class="fas fa-exclamation-triangle"></i> Associated Data</h6>
                <p class="mb-0">
                    This fault report has <strong>@Model.RepairSchedules.Count repair record(s)</strong> associated with it.
                    Deleting this fault report will also remove all associated repair records.
                </p>
            </div>
        }

        <form asp-action="Delete">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="FaultReportId" />
            <button type="submit" class="btn btn-danger">
                <i class="fas fa-trash"></i> Yes, Delete Fault Report
            </button>
            <a asp-action="Details" asp-route-id="@Model.FaultReportId" class="btn btn-secondary">
                <i class="fas fa-times"></i> Cancel
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
        </form>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string statusFilter)
    {
        return statusFilter?.ToLower() switch
        {
            "pending" => "bg-warning",
            "in progress" => "bg-primary",
            "resolved" => "bg-success",
            "cancelled" => "bg-secondary",
            "diagnosing" => "bg-info",
            _ => "bg-secondary"
        };
    }

    public string GetUrgencyBadgeClass(UrgencyLevel urgencyLevel)
    {
        return urgencyLevel switch
        {
            UrgencyLevel.Critical => "bg-danger",
            UrgencyLevel.Emergency => "bg-dark",
            UrgencyLevel.High => "bg-warning",
            UrgencyLevel.Medium => "bg-info",
            UrgencyLevel.Low => "bg-success",
            _ => "bg-secondary"
        };
    }
}
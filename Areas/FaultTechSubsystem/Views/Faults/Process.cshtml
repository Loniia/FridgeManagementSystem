@model FridgeManagementSystem.Models.RepairSchedule

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Process Fault Report";
    var faultReport = ViewBag.FaultReport as FridgeManagementSystem.Models.FaultReport;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Process Fault Report</h1>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Fault Reports
        </a>
    </div>

    @if (faultReport != null)
    {
        <div class="card shadow mb-4">
            <div class="card-header py-3 bg-primary text-white">
                <h6 class="m-0 font-weight-bold">Fault Report Information</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <strong>Report No:</strong> FR@(faultReport.FaultReportId.ToString("D3"))<br>
                        <strong>Fault Type:</strong> <span class="badge bg-info">@faultReport.FaultType</span>
                    </div>
                    <div class="col-md-3">
                        <strong>Urgency:</strong> <span class="badge @GetUrgencyBadgeClass(faultReport.UrgencyLevel)">@faultReport.UrgencyLevel</span><br>
                        <strong>Status:</strong> <span class="badge @GetStatusBadgeClass(faultReport.StatusFilter)">@faultReport.StatusFilter</span>
                    </div>
                    <div class="col-md-3">
                        <strong>Reported:</strong> @faultReport.ReportDate.ToString("yyyy/MM/dd")<br>
                        <strong>Source:</strong>
                        @if (faultReport.MaintenanceVisitId > 0)
                        {
                            <text>Maintenance</text>
                        }
                        else
                        {
                            <text>Customer</text>
                        }
                    </div>
                    <div class="col-md-3">
                        <strong>Fridge:</strong> @(faultReport.Fridge?.Model ?? "N/A")<br>
                        <strong>Serial:</strong> @(faultReport.Fridge?.SerialNumber ?? "N/A")
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-12">
                        <strong>Description:</strong> @faultReport.FaultDescription
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Fault Report Processing</h6>
                </div>
                <div class="card-body">
                    <!-- FIXED FORM: Added method="post" and RepairID hidden field -->
                    <form asp-action="Process" asp-route-id="@faultReport?.FaultReportId" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="FaultReportId" />
                        <input type="hidden" asp-for="FridgeId" />
                        <input type="hidden" asp-for="RepairID" />

                        <div class="form-group mb-3">
                            <label asp-for="Diagnosis" class="control-label">Initial Diagnosis</label>
                            <textarea asp-for="Diagnosis" class="form-control" rows="3"
                                      placeholder="Enter initial diagnosis findings..."></textarea>
                            <span asp-validation-for="Diagnosis" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="RepairNotes" class="control-label">Repair Notes & Observations</label>
                            <textarea asp-for="RepairNotes" class="form-control" rows="3"
                                      placeholder="Enter repair notes and observations..."></textarea>
                            <span asp-validation-for="RepairNotes" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Status" class="control-label">Process Status</label>
                                    <select asp-for="Status" class="form-control" asp-items="ViewBag.StatusOptions">
                                        <option value="">-- Select Status --</option>
                                    </select>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="control-label">Fridge Condition</label>
                                    <select name="fridgeCondition" class="form-control" asp-items="ViewBag.ConditionOptions">
                                        <option value="">-- Select Condition --</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update Process
                            </button>
                            <a asp-action="Index" class="btn btn-secondary">Cancel</a>

                            @if (faultReport?.StatusFilter != "Resolved")
                            {
                                <a asp-action="Repair" asp-route-id="@faultReport?.FaultReportId" class="btn btn-warning">
                                    <i class="fas fa-tools"></i> Start Repair
                                </a>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Process Guide</h6>
                </div>
                <div class="card-body">
                    <div class="alert alert-info">
                        <h6><i class="fas fa-info-circle"></i> Processing Steps</h6>
                        <ol class="mb-0 small">
                            <li><strong>Diagnosing:</strong> Initial assessment and testing</li>
                            <li><strong>Awaiting Parts:</strong> Waiting for replacement parts</li>
                            <li><strong>Repairing:</strong> Active repair work in progress</li>
                            <li><strong>Testing:</strong> Post-repair verification</li>
                            <li><strong>Completed:</strong> Fault resolved and verified</li>
                        </ol>
                    </div>

                    @if (faultReport?.RepairSchedules != null && faultReport.RepairSchedules.Any())
                    {
                        <div class="alert alert-warning mt-3">
                            <h6><i class="fas fa-history"></i> Recent Activity</h6>
                            @foreach (var repair in faultReport.RepairSchedules.OrderByDescending(r => r.CreatedDate).Take(2))
                            {
                                <p class="mb-1 small">
                                    <strong>@repair.Status</strong> - @repair.CreatedDate.ToString("MM/dd HH:mm")
                                </p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string statusFilter)
    {
        return statusFilter?.ToLower() switch
        {
            "pending" => "bg-warning",
            "in progress" => "bg-primary",
            "resolved" => "bg-success",
            "cancelled" => "bg-secondary",
            "diagnosing" => "bg-info",
            "awaiting parts" => "bg-warning",
            "repairing" => "bg-danger",
            "testing" => "bg-primary",
            "completed" => "bg-success",
            _ => "bg-secondary"
        };
    }

    public string GetUrgencyBadgeClass(UrgencyLevel urgencyLevel)
    {
        return urgencyLevel switch
        {
            UrgencyLevel.Critical => "bg-danger",
            UrgencyLevel.Emergency => "bg-dark",
            UrgencyLevel.High => "bg-warning",
            UrgencyLevel.Medium => "bg-info",
            UrgencyLevel.Low => "bg-success",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
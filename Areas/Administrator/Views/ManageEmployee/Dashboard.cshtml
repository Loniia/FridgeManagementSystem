@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewData["Title"] = "Admin Dashboard";

    var customersUrl = Url.Action("Index", "ManageCustomer", new { area = "Administrator" });
    var employeesUrl = Url.Action("Index", "ManageEmployee", new { area = "Administrator" });
    var fridgesUrl = Url.Action("Index", "ManageFridge", new { area = "Administrator" });
    var locationsUrl = Url.Action("Index", "ManageLocation", new { area = "Administrator" });
    var suppliersUrl = Url.Action("Index", "ManageSupplier", new { area = "Administrator" });
    var businessInfoUrl = Url.Action("Index", "BusinessInfo", new { area = "Administrator" });

}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Welcome, @(User.Identity?.Name ?? "Guest")</h2>
   
       
</div>
    <!-- ✅ Back to Login Button -->
    <a asp-area="" asp-controller="Account" asp-action="Login" class="btn btn-outline-danger">
        <i class="bi bi-box-arrow-left"></i> Back to Login
    </a>
<div class="position-fixed top-0 end-0 m-3" style="z-index: 1030;">
    @if (User.IsInRole("Admin"))
    {
        <div class="dropdown">
            <a class="btn position-relative p-0" href="#" id="notifDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="background: none; border: none;">
                <i class="fas fa-bell text-primary" style="font-size: 1.5rem;"></i>
                <span id="adminUnreadCountBadge"
                      class="badge bg-danger position-absolute top-0 start-100 translate-middle d-none"
                      style="font-size: 0.65rem; min-width: 18px; height: 18px; display: flex; align-items: center; justify-content: center;">
                </span>
            </a>

            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notifDropdown" style="min-width: 280px;">
                <li id="adminNotifItems">
                    <span class="dropdown-item">No notifications</span>
                </li>
                <li><hr class="dropdown-divider" /></li>
                <li>
                    <a class="dropdown-item text-center" href="@Url.Action("All", "Notifications", new { area = "" })">
                        View all notifications
                    </a>
                </li>
            </ul>
        </div>
    }
</div>


<div class="row">

    <!-- Locations Card -->
    <div class="col-md-3 mb-3">
        <a href="@locationsUrl" style="text-decoration: none;">
            <div class="card text-white bg-info h-100">
                <div class="card-header">Locations</div>
                <div class="card-body">
                    <h5 class="card-title">Manage Locations</h5>
                    <p class="card-text">Add, edit, or remove fridge locations.</p>
                </div>
            </div>
        </a>
    </div>

    <!-- Employees Card -->
    <div class="col-md-3 mb-3">
        <a href="@employeesUrl" style="text-decoration: none;">
            <div class="card text-white bg-success h-100">
                <div class="card-header">Employees</div>
                <div class="card-body">
                    <h5 class="card-title">Manage Employees</h5>
                    <p class="card-text">Create and assign employees to roles.</p>
                </div>
            </div>
        </a>
    </div>

    <!-- Suppliers Card -->
    <div class="col-md-3 mb-3">
        <a href="@suppliersUrl" style="text-decoration: none;">
            <div class="card text-white bg-secondary h-100">
                <div class="card-header">Suppliers</div>
                <div class="card-body">
                    <h5 class="card-title">Manage Suppliers</h5>
                    <p class="card-text">Add, edit, or remove refrigerator suppliers.</p>
                </div>
            </div>
        </a>
    </div>

    <!-- Customers Card -->
    <div class="col-md-3 mb-3">
        <a href="@customersUrl" style="text-decoration: none;">
            <div class="card text-white bg-primary h-100">
                <div class="card-header">Customers</div>
                <div class="card-body">
                    <h5 class="card-title">Manage Customers</h5>
                    <p class="card-text">View, edit, or remove customer accounts.</p>
                </div>
            </div>
        </a>
    </div>

    <!-- Fridges Card -->
    <div class="col-md-3 mb-3">
        <a href="@fridgesUrl" style="text-decoration: none;">
            <div class="card text-white bg-warning h-100">
                <div class="card-header">Fridges</div>
                <div class="card-body">
                    <h5 class="card-title">Manage Fridges</h5>
                    <p class="card-text">Manage fridges, inventory, and allocations.</p>
                </div>
            </div>
        </a>
    </div>

    <!-- Business Info Card -->
    <div class="col-md-3 mb-3">
        <a href="@businessInfoUrl" style="text-decoration: none;">
            <div class="card text-white bg-dark h-100">
                <div class="card-header">Business Info</div>
                <div class="card-body">
                    <h5 class="card-title">Business Settings</h5>
                    <p class="card-text">Manage company information and system settings.</p>
                </div>
            </div>
        </a>
    </div>

    <!-- Reports Card -->
    <div class="col-md-3">
        <div class="card">
            <div class="card-body text-center">
                <i class="fas fa-chart-bar fa-2x mb-3"></i>
                <h5>Reports</h5>
                <a asp-area="" asp-controller="Reports" asp-action="Index" class="btn btn-primary">View</a>

            </div>
        </div>
    </div>

   
</div>


@section Scripts {
    <script>
        async function loadAdminNotifications() {
            try {
                // ✅ Load unread count
                const count = await fetch('/Notifications/UnreadCount').then(r => r.json());
                const badge = document.getElementById('adminUnreadCountBadge');
                badge.textContent = count;
                badge.classList.toggle('d-none', count === 0);

                // ✅ Load latest notifications
                const items = await fetch('/Notifications/Unread').then(r => r.json());
                const container = document.getElementById('adminNotifItems');
                container.innerHTML = '';

                if (items.length === 0) {
                    container.innerHTML = '<span class="dropdown-item">No notifications</span>';
                } else {
                    items.forEach(n => {
                        container.innerHTML += `
                            <li>
                                <a class="dropdown-item" href="${n.url ?? '/Notifications/All'}">
                                    ${n.message}
                                </a>
                            </li>`;
                    });
                }

            } catch (e) {
                console.error("Notification load failed", e);
            }
        }

        // ✅ Load immediately and then every 5 seconds
        loadAdminNotifications();
        setInterval(loadAdminNotifications, 5000);
    </script>
}


@* <!-- 🔔 Notification dropdown -->
<li class="nav-item dropdown">
    <a class="nav-link position-relative" href="#" id="notifDropdown" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="fas fa-bell"></i>
        @if (unreadCount > 0)
        {
            <span class="badge bg-danger position-absolute top-0 start-100 translate-middle">@unreadCount</span>
        }
    </a>
    <ul class="dropdown-menu dropdown-menu-end p-2" aria-labelledby="notifDropdown" style="min-width:300px;">
        @if (unread.Any())
        {
            foreach (var n in unread)
            {
                <li>
                    <a class="dropdown-item" href="@n.Url ?? " #"" onclick="markAsRead(@n.NotificationId)">
                        <div class="small text-muted">@n.CreatedAt.ToLocalTime().ToString("g")</div>
                        <div>@n.Message</div>
                    </a>
                </li>
                <li><hr class="dropdown-divider" /></li>
            }
            <li>
                <a class="dropdown-item text-center" href="@Url.Action("All", "Notifications")">View all notifications</a>
            </li>
        }
        else
        {
            <li><span class="dropdown-item text-muted">No new notifications</span></li>
        }
    </ul>
</li>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>


@await RenderSectionAsync("Scripts", required: false)

<script>
    async function markAsRead(id) {
        try {
            await fetch('/Notifications/MarkAsRead?id=' + id, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            });
            location.href = document.querySelector('[data-notif-id="' + id + '"]')?.getAttribute('data-url') || '/';
        } catch (e) {
            console.error(e);
        }
    }
</script> *@
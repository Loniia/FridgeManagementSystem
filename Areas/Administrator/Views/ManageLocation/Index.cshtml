@model IEnumerable<FridgeManagementSystem.Models.Location>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Manage Locations";
}

<h2>Locations</h2>

<!-- Add Location Button -->
<p>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addLocationModal" onclick="return true">
        + Add Location
    </button>
</p>

<!-- Locations Table -->
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Address</th>
            <th>City</th>
            <th>Province</th>
            <th>Postal Code</th>
            <th>Customers</th>
            <th>Employees</th>
            <th>Fridges</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Address</td>
                <td>@item.City</td>
                <td>@item.Province</td>
                <td>@item.PostalCode</td>
                <td>@(item.Customer?.Count() ?? 0)</td>
                <td>@(item.Employee?.Count() ?? 0)</td>
                <td>@(item.Fridge?.Count() ?? 0)</td>
                <td>
                    <a asp-action="LocationDetails" asp-route-id="@item.LocationId" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Edit" asp-route-id="@item.LocationId" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.LocationId" class="btn btn-danger btn-sm">Deactivate</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Add Location Modal -->
<div class="modal fade" id="addLocationModal" tabindex="-1" aria-labelledby="addLocationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addLocationModalLabel">Add Location</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="locationForm" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Address" class="form-label">Address</label>
                        <input type="text" id="Address" name="Address" class="form-control" placeholder="Enter street address" />
                        <span class="text-danger" id="addressValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label for="City" class="form-label">City</label>
                        <input type="text" id="City" name="City" class="form-control" placeholder="Enter city" />
                        <span class="text-danger" id="cityValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label for="Province" class="form-label">Province</label>
                        <input type="text" id="Province" name="Province" class="form-control" placeholder="Enter province" />
                        <span class="text-danger" id="provinceValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label for="PostalCode" class="form-label">Postal Code</label>
                        <input type="text" id="PostalCode" name="PostalCode" class="form-control" placeholder="Enter postal code" />
                        <span class="text-danger" id="postalCodeValidation"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Location</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.getElementById('locationForm').addEventListener('submit', function (e) {
            e.preventDefault();
            console.log('Form submit event fired!');

            // Get the form data
            const formData = new FormData(this);
            console.log('FormData:', Object.fromEntries(formData));

            // Simple test - does the fetch work at all?
            fetch('@Url.Action("Create", "ManageLocation")', {
                method: 'POST',
                body: formData,
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value,
                    'Accept': 'application/json'
                }
            })
                .then(response => {
                    console.log('Response status:', response.status);
                    console.log('Response ok:', response.ok);
                    return response.json();
                })
                .then(data => {
                    console.log('Success! Response data:', data);
                    if (data.success) {
                        alert('Location saved successfully! Closing modal...');
                        $('#addLocationModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Validation errors: ' + JSON.stringify(data.errors));
                    }
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                    alert('Error occurred: ' + error.message);
                });
        });
    </script>
}